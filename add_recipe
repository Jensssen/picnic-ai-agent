get recipe details:
https://storefront-prod.de.picnicinternational.com/api/15/pages/recipe-details-page?recipe_id=664375b30daa4456de253728

{
	"id": "js-recipe-details-page",
	"header": {
		"type": "STATIC",
		"title": "Pizzabrötchen vegetarisch"
	},
	"presentation": {
		"type": "FULL_SCREEN",
		"behavior": {
			"keepAwake": true
		}
	},
	"analytics": {
		"contexts": [{
			"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
			"data": {
				"recipe_id": "664375b30daa4456de253728",
				"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
			}
		}]
	},
	"body": {
		"type": "STATE_BOUNDARY",
		"id": "GlobalState",
		"state": {},
		"child": {
			"id": "RecipeDetailsPageState",
			"state": {
				"basketModificationOngoingState": false,
				"focusedTabIdState": "ingredients",
				"servingsState": 6
			},
			"type": "STATE_BOUNDARY",
			"child": {
				"id": "root",
				"layout": {
					"type": "FLOW",
					"axis": "VERTICAL",
					"overflow": "HIDDEN",
					"backgroundColor": "#ffffff"
				},
				"size": {
					"crossAxis": "12g",
					"mainAxis": "SCREEN_HEIGHT"
				},
				"type": "BLOCK",
				"children": [{
					"id": "root-content",
					"layout": {
						"type": "FLOW",
						"axis": "VERTICAL",
						"backgroundColor": "#ffffff",
						"estimatedItemSize": {
							"type": "EXPRESSION",
							"expression": "CONTAINER_HEIGHT"
						},
						"padding": {
							"bottom": 55
						}
					},
					"size": {
						"crossAxis": "12g",
						"mainAxis": "CONTAINER_HEIGHT - SAFE_AREA_TOP - DEFAULT_STICKY_HEADER_HEIGHT"
					},
					"type": "BLOCK",
					"children": [{
						"id": "RecipeState",
						"state": {
							"saved": {
								"664375b30daa4456de253728": false
							}
						},
						"type": "STATE_BOUNDARY",
						"child": {
							"type": "PML",
							"id": "recipe-details-header",
							"size": {
								"crossAxis": "12g"
							},
							"pml": {
								"pmlVersion": "0.1.0",
								"images": {},
								"component": {
									"axis": "VERTICAL",
									"spacing": 8,
									"padding": {
										"bottom": 14
									},
									"type": "STACK",
									"children": [{
										"axis": "VERTICAL",
										"type": "STACK",
										"children": [{
											"source": {
												"id": "recipes/4a402350b902ac9a1635462008a5c18032647bc84bbe2f38cf6feee5a5551104"
											},
											"resizeMode": "COVER",
											"width": "100%",
											"aspectRatio": 1,
											"derivativeType": "filled",
											"extension": "webp",
											"placeholder": "NONE",
											"type": "IMAGE"
										}, {
											"absolutePosition": {
												"bottom": 0
											},
											"width": "100%",
											"borderRadius": {
												"topLeft": 16,
												"topRight": 16
											},
											"backgroundColor": "#ffffff",
											"height": 16,
											"type": "CONTAINER",
											"child": null
										}, {
											"height": 40,
											"width": "100%",
											"absolutePosition": {
												"top": 8
											},
											"type": "CONTAINER",
											"child": {
												"axis": "HORIZONTAL",
												"height": "100%",
												"spacing": 8,
												"distribution": "END",
												"padding": {
													"right": 8
												},
												"type": "STACK",
												"children": [{
													"height": 40,
													"width": 40,
													"type": "CONTAINER",
													"child": {
														"testID": "RecipeDetails.FavoriteButton",
														"accessibilityLabel": {
															"type": "EXPRESSION",
															"expression": "(() => {\n                      const isSaved = false ? GlobalState.isSaved :  false\n                      const id =  false ? GlobalState.id :  '664375b30daa4456de253728'\n                      if (!GlobalState.saved || typeof GlobalState.saved[id] === \"undefined\") {\n                         return isSaved ? 'heartFilled' : 'heart'\n                      } else if (typeof GlobalState.saved[id] === \"boolean\") {\n                          return GlobalState.saved[id] ? 'Tippe zwei Mal, um das Rezept zu speichern' : 'Tippe zwei Mal, um das Rezept aus den gespeicherten Rezepten zu entfernen'\n                      }\n                    })()"
														},
														"onPress": {
															"type": "EXPRESSION",
															"expression": "()=> {\n        const isSavedValue = false ? GlobalState?.isSaved :  false\n        const id =  false ? GlobalState?.id :  '664375b30daa4456de253728'\n\n        if (!GlobalState.saved) {\n           GlobalState.saved = {};\n        }\n        if (!GlobalState.recipeLikeTimeouts) {\n           GlobalState.recipeLikeTimeouts = {};\n        }\n        \n        if (GlobalState.recipeLikeTimeouts[id]) {\n            clearTimeout(GlobalState.recipeLikeTimeouts[id]);\n        }\n        \n        if (typeof GlobalState.saved[id] === \"boolean\") {\n            GlobalState.saved[id] = !GlobalState.saved[id];\n        } else {\n            GlobalState.saved[id] = !isSavedValue;\n        }\n        \n        const isSaved = GlobalState.saved?.[id];\n        \n        const saveAction = {\n            \"actionType\": \"ENDPOINT\",\n            \"method\": \"post\",\n            \"url\": \"pages/task/recipe-saving\",\n            \"body\": {\n                \"payload\": {\n                \"recipe_id\": id, \n                \"saved_at\": '2025-01-08T21:53:55.233Z'\n                }\n            },\n            \"onSuccess\": {\n                \"actionType\": \"CALLBACK\",\n                \"callback\": () => {\n                    onPMLAction({\n                    \"actionType\": \"EVENT\",\n                    \"action\": {\n                        \"type\": \"REFRESH\",\n                        \"source\": \"BACKGROUND_PAGES\",\n                        \"onNext\": {\n                            \"actionType\": \"EVENT\",\n                            \"action\": {\n                                \"type\": \"SNACKBAR\",\n                                \"isVisible\": true,\n                                \"message\":  \"Gespeichert ☑️\",\n                                ...({\"pageId\":\"see-more-recipes-page\",\"params\":{\"segmentName\":\"Favoriten\",\"segmentType\":\"SAVED_RECIPES\"}})\n                            }\n                        }\n                    }\n                            });\n                   \n                    if(false){\n                        onPMLAction({\"actionType\":\"RELOAD\",\"suspenseId\":\"cookbook-suspense-id\"});\n                    }\n                }\n            }\n        };\n\n        const unsaveAction = {\n            \"actionType\": \"ENDPOINT\",\n            \"method\": \"post\",\n            \"url\": \"pages/task/recipe-saving\",\n            \"body\": {\n                \"payload\": {\n                \"recipe_id\": id, \n                \"saved_at\": null \n                }\n            },\n            \"onSuccess\": {\n                \"actionType\": \"EVENT\",\n                \"action\": {\n                    \"type\": \"REFRESH\",\n                    \"source\": \"BACKGROUND_PAGES\",\n                    \"onNext\": {\n                        \"actionType\": \"EVENT\",\n                        \"action\": {\n                            \"type\": \"SNACKBAR\",\n                            \"isVisible\": false\n                        }\n                    }\n                }\n            }\n        };\n\n        const action = isSaved ? saveAction : unsaveAction;\n        \n        const analyticsContext = [\n            {\n                \"schema\": \"iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-1-0\",\n                    \"data\": {\n                        \"recipe_id\":  id\n                    }\n            }\n        ]\n\n        const analyticsEvent = {\n            \"schema\": \"iglu:nl.picnic.snowplow/generic_action/jsonschema/1-0-0\",\n            \"data\": {\n                \"target\": \"save_recipe_button\",\n                \"action\": GlobalState.saved?.[id] ? \"toggle\" : \"untoggle\"\n            }\n        }\n        \n        GlobalState.recipeLikeTimeouts[id] = setTimeout(() => {\n          onPMLAction(action, analyticsContext, analyticsEvent);\n        }, 500);\n    }"
														},
														"type": "TOUCHABLE",
														"child": {
															"axis": "VERTICAL",
															"height": 40,
															"width": 40,
															"alignment": "CENTER",
															"distribution": "CENTER",
															"type": "STACK",
															"children": [{
																"backgroundColor": "#ffffff",
																"borderRadius": 20,
																"height": "100%",
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"axis": "VERTICAL",
																	"alignment": "CENTER",
																	"distribution": "CENTER",
																	"height": "100%",
																	"width": "100%",
																	"type": "STACK",
																	"children": [{
																		"iconKey": {
																			"type": "EXPRESSION",
																			"expression": "(() => {\n                      const isSaved = false ? GlobalState.isSaved :  false\n                      const id =  false ? GlobalState.id :  '664375b30daa4456de253728'\n                      if (!GlobalState.saved || typeof GlobalState.saved[id] === \"undefined\") {\n                         return isSaved ? 'heartFilled' : 'heart'\n                      } else if (typeof GlobalState.saved[id] === \"boolean\") {\n                          return GlobalState.saved[id] ? 'heartFilled' : 'heart'\n                      }\n                    })()"
																		},
																		"width": 24,
																		"aspectRatio": 1,
																		"color": {
																			"type": "EXPRESSION",
																			"expression": "(() => {\n                      const isSaved = false ? GlobalState.isSaved :  false\n                      const id =  false ? GlobalState.id :  '664375b30daa4456de253728'\n                      if (!GlobalState.saved || typeof GlobalState.saved[id] === \"undefined\") {\n                         return isSaved ? 'heartFilled' : 'heart'\n                      } else if (typeof GlobalState.saved[id] === \"boolean\") {\n                          return GlobalState.saved[id] ? '#e1171e' : '#333333'\n                      }\n                    })()"
																		},
																		"type": "ICON"
																	}]
																}
															}]
														}
													}
												}, {
													"height": 40,
													"width": 40,
													"type": "CONTAINER",
													"child": {
														"onPress": {
															"type": "EXPRESSION",
															"expression": "() => {\n              onPMLAction(\n                {\n                  \"actionType\": \"EVENT\",\n                  \"action\": {\n                    \"type\": \"SOCIAL_SHARE\",\n                    \"message\": \"Ich habe bei Picnic dieses leckere Rezept gefunden: 'Pizzabrötchen vegetarisch'. Probier’s doch mal aus: https://picnic.app/de/go/aeowmvz\"\n                  }\n                },\n                [{\"schema\":\"iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0\",\"data\":{\"type\":\"recipe_share_button\",\"template_id\":\"recipe-details-header-share-button\"}},{\"schema\":\"iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0\",\"data\":{\"recipe_id\":\"664375b30daa4456de253728\"}}]\n              );\n            }"
														},
														"type": "TOUCHABLE",
														"child": {
															"axis": "VERTICAL",
															"height": 40,
															"width": 40,
															"alignment": "CENTER",
															"distribution": "CENTER",
															"type": "STACK",
															"children": [{
																"backgroundColor": "#ffffff",
																"borderRadius": 20,
																"height": "100%",
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"axis": "VERTICAL",
																	"alignment": "CENTER",
																	"distribution": "CENTER",
																	"height": "100%",
																	"width": "100%",
																	"type": "STACK",
																	"children": [{
																		"iconKey": "shareIcon",
																		"fallback": {
																			"id": "picnic-page/53887ac4bc0592340f2c907446e710c8e8e8aa71ceeac51968338d0c717b6634"
																		},
																		"width": 16,
																		"height": 17,
																		"type": "ICON"
																	}]
																}
															}]
														}
													}
												}]
											}
										}]
									}, {
										"axis": "VERTICAL",
										"padding": {
											"left": 16,
											"right": 16
										},
										"spacing": 4,
										"type": "STACK",
										"children": [{
											"textAttributes": {
												"size": 14,
												"weight": "MEDIUM",
												"color": "#295813"
											},
											"markdown": "Fingerfood",
											"numberOfLines": 1,
											"type": "RICH_TEXT"
										}, {
											"textAttributes": {
												"size": 28,
												"weight": "SEMIBOLD",
												"color": "#333333"
											},
											"markdown": "Pizzabrötchen vegetarisch",
											"type": "RICH_TEXT"
										}]
									}]
								}
							}
						}
					}, {
						"id": "recipe-portioning-content-wrapper",
						"suspenseId": "recipe-portioning-content-suspense-id-664375b30daa4456de253728",
						"child": {
							"id": "RecipePortioningContentState",
							"state": {
								"coreIngredientsState": [{
									"ingredient_id": "7115c0e8-0879-411e-8b36-a5812a1faee9",
									"selling_unit_id": "s1023297",
									"name": "Brötchen",
									"ingredient_type": "CORE",
									"order": 1,
									"selling_unit_quantity": 1,
									"written_quantity": "8 Stk.",
									"display_ingredient_quantity": 8.0,
									"display_unit_of_measurement": "Stk.",
									"availability_status": "AVAILABLE"
								}, {
									"ingredient_id": "c92d5ce0-2670-4dc6-8a6c-e45a6aa443da",
									"selling_unit_id": "s1020276",
									"name": "Mais",
									"ingredient_type": "CORE",
									"order": 2,
									"selling_unit_quantity": 1,
									"written_quantity": "1 Dose",
									"display_ingredient_quantity": 1.0,
									"display_unit_of_measurement": "Dose",
									"availability_status": "AVAILABLE"
								}, {
									"ingredient_id": "7e329eff-0b40-4f50-a425-7b7732ca7469",
									"selling_unit_id": "s1029546",
									"name": "Cherrytomaten",
									"ingredient_type": "CORE",
									"order": 3,
									"selling_unit_quantity": 1,
									"written_quantity": "150 g",
									"display_ingredient_quantity": 150.0,
									"display_unit_of_measurement": "g",
									"availability_status": "AVAILABLE"
								}, {
									"ingredient_id": "269b5cce-cb5f-4f38-ae05-f2b8deef5bf6",
									"selling_unit_id": "s1032352",
									"name": "Gratinkäse",
									"ingredient_type": "CORE",
									"order": 4,
									"selling_unit_quantity": 1,
									"written_quantity": "150 g",
									"display_ingredient_quantity": 150.0,
									"display_unit_of_measurement": "g",
									"availability_status": "AVAILABLE"
								}, {
									"ingredient_id": "9109c76c-f450-4263-91eb-1e57ac4acf93",
									"selling_unit_id": "s1027982",
									"name": "Paprika",
									"ingredient_type": "CORE",
									"order": 5,
									"selling_unit_quantity": 1,
									"written_quantity": "1 Stk.",
									"display_ingredient_quantity": 1.0,
									"display_unit_of_measurement": "Stk.",
									"availability_status": "AVAILABLE"
								}, {
									"ingredient_id": "b152eb9a-0b3b-4ab3-9da7-bbf2b68fba3a",
									"selling_unit_id": "s1060088",
									"name": "Braune Champignons",
									"ingredient_type": "CORE",
									"order": 6,
									"selling_unit_quantity": 1,
									"written_quantity": "150 g",
									"display_ingredient_quantity": 150.0,
									"display_unit_of_measurement": "g",
									"availability_status": "AVAILABLE"
								}, {
									"ingredient_id": "c3882ac8-aa5d-4422-95fd-f9cdba806071",
									"selling_unit_id": "s1021966",
									"name": "Schlagsahne",
									"ingredient_type": "CORE",
									"order": 7,
									"selling_unit_quantity": 1,
									"written_quantity": "200 ml",
									"display_ingredient_quantity": 200.0,
									"display_unit_of_measurement": "ml",
									"availability_status": "AVAILABLE"
								}, {
									"ingredient_id": "12151ef8-b0d5-4266-b33f-93f2259f9b81",
									"selling_unit_id": "s1060062",
									"name": "Basilikum",
									"ingredient_type": "CORE",
									"order": 8,
									"selling_unit_quantity": 1,
									"written_quantity": "1 Bund",
									"display_ingredient_quantity": 1.0,
									"display_unit_of_measurement": "Bund",
									"availability_status": "AVAILABLE"
								}, {
									"ingredient_id": "359a6593-10a2-4496-aa6e-4421234479e0",
									"selling_unit_id": "s1029170",
									"name": "Schmand",
									"ingredient_type": "CORE",
									"order": 9,
									"selling_unit_quantity": 1,
									"written_quantity": "200 g",
									"display_ingredient_quantity": 200.0,
									"display_unit_of_measurement": "g",
									"availability_status": "AVAILABLE"
								}, {
									"ingredient_id": "b4f66fff-b8f5-4ecd-aea8-6e71feb5b7fe",
									"selling_unit_id": "s1087083",
									"name": "Italienische Kräuter",
									"ingredient_type": "CORE",
									"order": 11,
									"selling_unit_quantity": 1,
									"written_quantity": "1 EL",
									"display_ingredient_quantity": 1.0,
									"display_unit_of_measurement": "EL",
									"availability_status": "AVAILABLE"
								}],
								"reloadOngoingState": false
							},
							"type": "STATE_BOUNDARY",
							"child": {
								"id": "recipe-portioning-content-container",
								"layout": {
									"type": "FLOW",
									"axis": "VERTICAL"
								},
								"size": {
									"crossAxis": "12g"
								},
								"type": "BLOCK",
								"children": [{
									"type": "PML",
									"id": "recipe-description-section",
									"size": {
										"crossAxis": "12g"
									},
									"pml": {
										"pmlVersion": "0.1.0",
										"images": {},
										"component": {
											"axis": "VERTICAL",
											"alignment": "FILL",
											"spacing": 40,
											"padding": {
												"right": 16,
												"left": 16,
												"bottom": 16
											},
											"type": "STACK",
											"children": [{
												"type": "CONTAINER",
												"child": {
													"textAttributes": {
														"size": 16,
														"weight": "REGULAR",
														"color": "#333333"
													},
													"markdown": "Dieses knusprige Fingerfood ist ein gerngesehener Gast auf jedem Partybuffet.",
													"type": "RICH_TEXT"
												}
											}, {
												"axis": "HORIZONTAL",
												"distribution": "SPACE_AROUND",
												"alignment": "CENTER",
												"padding": {
													"bottom": 12
												},
												"type": "STACK",
												"children": [{
													"axis": "VERTICAL",
													"spacing": 4,
													"alignment": "CENTER",
													"width": "100%",
													"type": "STACK",
													"children": [{
														"markdown": "25 min",
														"numberOfLines": 1,
														"textAttributes": {
															"size": 24,
															"weight": "SEMIBOLD",
															"color": "#333333"
														},
														"type": "RICH_TEXT"
													}, {
														"markdown": "Gesamt",
														"numberOfLines": 1,
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"type": "RICH_TEXT"
													}]
												}, {
													"axis": "VERTICAL",
													"alignment": "CENTER",
													"distribution": "CENTER",
													"height": "100%",
													"width": 20,
													"type": "STACK",
													"children": [{
														"width": 2,
														"height": 20,
														"backgroundColor": "#f8f5f2",
														"borderRadius": 15,
														"type": "CONTAINER",
														"child": null
													}]
												}, {
													"axis": "VERTICAL",
													"spacing": 4,
													"alignment": "CENTER",
													"width": "100%",
													"type": "STACK",
													"children": [{
														"markdown": "15 min",
														"numberOfLines": 1,
														"textAttributes": {
															"size": 24,
															"weight": "SEMIBOLD",
															"color": "#333333"
														},
														"type": "RICH_TEXT"
													}, {
														"markdown": "Zubereitung",
														"numberOfLines": 1,
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"type": "RICH_TEXT"
													}]
												}, {
													"axis": "VERTICAL",
													"alignment": "CENTER",
													"distribution": "CENTER",
													"height": "100%",
													"width": 20,
													"type": "STACK",
													"children": [{
														"width": 2,
														"height": 20,
														"backgroundColor": "#f8f5f2",
														"borderRadius": 15,
														"type": "CONTAINER",
														"child": null
													}]
												}, {
													"axis": "VERTICAL",
													"spacing": 4,
													"alignment": "CENTER",
													"width": "100%",
													"type": "STACK",
													"children": [{
														"axis": "HORIZONTAL",
														"type": "STACK",
														"children": [{
															"textAttributes": {
																"size": 24,
																"weight": "SEMIBOLD",
																"color": "#333333"
															},
															"numberOfLines": 1,
															"markdown": "3.54 €",
															"type": "RICH_TEXT"
														}]
													}, {
														"markdown": "pro Portion",
														"numberOfLines": 1,
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"type": "RICH_TEXT"
													}]
												}]
											}]
										}
									}
								}, {
									"type": "PML",
									"id": "recipe-core-ingredients-details-section",
									"size": {
										"crossAxis": "12g"
									},
									"pml": {
										"pmlVersion": "0.1.0",
										"images": {},
										"component": {
											"axis": "VERTICAL",
											"alignment": "FILL",
											"padding": {
												"right": 16,
												"left": 16
											},
											"type": "STACK",
											"children": [{
												"backgroundColor": "#f8f5f2",
												"height": 2,
												"borderRadius": 5,
												"type": "CONTAINER",
												"child": null
											}, {
												"padding": {
													"top": 24,
													"bottom": 4
												},
												"type": "CONTAINER",
												"child": {
													"axis": "VERTICAL",
													"type": "STACK",
													"children": [{
														"textAlignment": "START",
														"numberOfLines": 1,
														"textAttributes": {
															"size": 20,
															"weight": "SEMIBOLD",
															"color": "#333333"
														},
														"markdown": "Zutaten",
														"type": "RICH_TEXT"
													}, {
														"textAlignment": "START",
														"numberOfLines": 1,
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"markdown": "Für 6 Portionen",
														"type": "RICH_TEXT"
													}]
												}
											}, {
												"axis": "HORIZONTAL",
												"padding": {
													"top": 16,
													"bottom": 16
												},
												"wrap": "WRAP",
												"type": "STACK",
												"children": [{
													"axis": "VERTICAL",
													"alignment": "START",
													"width": "50%",
													"height": 64,
													"padding": {
														"right": 6,
														"left": 0
													},
													"type": "STACK",
													"children": [{
														"textAttributes": {
															"size": 16,
															"weight": "MEDIUM",
															"color": "#333333"
														},
														"numberOfLines": 2,
														"markdown": "Brötchen",
														"type": "RICH_TEXT"
													}, {
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"numberOfLines": 1,
														"markdown": "8 Stk.",
														"type": "RICH_TEXT"
													}]
												}, {
													"axis": "VERTICAL",
													"alignment": "START",
													"width": "50%",
													"height": 64,
													"padding": {
														"right": 0,
														"left": 6
													},
													"type": "STACK",
													"children": [{
														"textAttributes": {
															"size": 16,
															"weight": "MEDIUM",
															"color": "#333333"
														},
														"numberOfLines": 2,
														"markdown": "Mais",
														"type": "RICH_TEXT"
													}, {
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"numberOfLines": 1,
														"markdown": "1 Dose",
														"type": "RICH_TEXT"
													}]
												}, {
													"axis": "VERTICAL",
													"alignment": "START",
													"width": "50%",
													"height": 64,
													"padding": {
														"right": 6,
														"left": 0
													},
													"type": "STACK",
													"children": [{
														"textAttributes": {
															"size": 16,
															"weight": "MEDIUM",
															"color": "#333333"
														},
														"numberOfLines": 2,
														"markdown": "Cherrytomaten",
														"type": "RICH_TEXT"
													}, {
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"numberOfLines": 1,
														"markdown": "150 g",
														"type": "RICH_TEXT"
													}]
												}, {
													"axis": "VERTICAL",
													"alignment": "START",
													"width": "50%",
													"height": 64,
													"padding": {
														"right": 0,
														"left": 6
													},
													"type": "STACK",
													"children": [{
														"textAttributes": {
															"size": 16,
															"weight": "MEDIUM",
															"color": "#333333"
														},
														"numberOfLines": 2,
														"markdown": "Gratinkäse",
														"type": "RICH_TEXT"
													}, {
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"numberOfLines": 1,
														"markdown": "150 g",
														"type": "RICH_TEXT"
													}]
												}, {
													"axis": "VERTICAL",
													"alignment": "START",
													"width": "50%",
													"height": 64,
													"padding": {
														"right": 6,
														"left": 0
													},
													"type": "STACK",
													"children": [{
														"textAttributes": {
															"size": 16,
															"weight": "MEDIUM",
															"color": "#333333"
														},
														"numberOfLines": 2,
														"markdown": "Paprika",
														"type": "RICH_TEXT"
													}, {
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"numberOfLines": 1,
														"markdown": "1 Stk.",
														"type": "RICH_TEXT"
													}]
												}, {
													"axis": "VERTICAL",
													"alignment": "START",
													"width": "50%",
													"height": 64,
													"padding": {
														"right": 0,
														"left": 6
													},
													"type": "STACK",
													"children": [{
														"textAttributes": {
															"size": 16,
															"weight": "MEDIUM",
															"color": "#333333"
														},
														"numberOfLines": 2,
														"markdown": "Braune Champignons",
														"type": "RICH_TEXT"
													}, {
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"numberOfLines": 1,
														"markdown": "150 g",
														"type": "RICH_TEXT"
													}]
												}, {
													"axis": "VERTICAL",
													"alignment": "START",
													"width": "50%",
													"height": 64,
													"padding": {
														"right": 6,
														"left": 0
													},
													"type": "STACK",
													"children": [{
														"textAttributes": {
															"size": 16,
															"weight": "MEDIUM",
															"color": "#333333"
														},
														"numberOfLines": 2,
														"markdown": "Schlagsahne",
														"type": "RICH_TEXT"
													}, {
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"numberOfLines": 1,
														"markdown": "200 ml",
														"type": "RICH_TEXT"
													}]
												}, {
													"axis": "VERTICAL",
													"alignment": "START",
													"width": "50%",
													"height": 64,
													"padding": {
														"right": 0,
														"left": 6
													},
													"type": "STACK",
													"children": [{
														"textAttributes": {
															"size": 16,
															"weight": "MEDIUM",
															"color": "#333333"
														},
														"numberOfLines": 2,
														"markdown": "Basilikum",
														"type": "RICH_TEXT"
													}, {
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"numberOfLines": 1,
														"markdown": "1 Bund",
														"type": "RICH_TEXT"
													}]
												}, {
													"axis": "VERTICAL",
													"alignment": "START",
													"width": "50%",
													"height": 64,
													"padding": {
														"right": 6,
														"left": 0
													},
													"type": "STACK",
													"children": [{
														"textAttributes": {
															"size": 16,
															"weight": "MEDIUM",
															"color": "#333333"
														},
														"numberOfLines": 2,
														"markdown": "Schmand",
														"type": "RICH_TEXT"
													}, {
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"numberOfLines": 1,
														"markdown": "200 g",
														"type": "RICH_TEXT"
													}]
												}, {
													"axis": "VERTICAL",
													"alignment": "START",
													"width": "50%",
													"height": 64,
													"padding": {
														"right": 0,
														"left": 6
													},
													"type": "STACK",
													"children": [{
														"textAttributes": {
															"size": 16,
															"weight": "MEDIUM",
															"color": "#333333"
														},
														"numberOfLines": 2,
														"markdown": "Italienische Kräuter",
														"type": "RICH_TEXT"
													}, {
														"textAttributes": {
															"size": 14,
															"weight": "REGULAR",
															"color": "#333333"
														},
														"numberOfLines": 1,
														"markdown": "1 EL",
														"type": "RICH_TEXT"
													}]
												}]
											}, {
												"backgroundColor": "#f8f5f2",
												"height": 2,
												"borderRadius": 5,
												"type": "CONTAINER",
												"child": null
											}]
										}
									}
								}, {
									"type": "PML",
									"id": "recipe-ingredients-utensils",
									"size": {
										"crossAxis": "12g"
									},
									"pml": {
										"pmlVersion": "0.1.0",
										"images": {},
										"component": {
											"axis": "VERTICAL",
											"padding": {
												"left": 16,
												"right": 16,
												"bottom": 24
											},
											"type": "STACK",
											"children": [{
												"padding": {
													"top": 12,
													"bottom": 12
												},
												"type": "CONTAINER",
												"child": {
													"backgroundColor": "#EDEDED",
													"height": 1,
													"type": "CONTAINER",
													"child": null
												}
											}, {
												"axis": "VERTICAL",
												"spacing": 8,
												"type": "STACK",
												"children": [{
													"textAlignment": "START",
													"textAttributes": {
														"size": 16,
														"weight": "REGULAR",
														"color": "#333333"
													},
													"markdown": "**Eigene Zutaten:** Salz, Pfeffer und 1 Stk. rote Zwiebel",
													"type": "RICH_TEXT"
												}, {
													"textAlignment": "START",
													"textAttributes": {
														"size": 16,
														"weight": "REGULAR",
														"color": "#333333"
													},
													"markdown": "**Du benötigst:** Ofen",
													"type": "RICH_TEXT"
												}]
											}]
										}
									}
								}, {
									"id": "recipe-content-tabs-container",
									"size": {
										"crossAxis": "SCREEN_WIDTH",
										"mainAxis": 65
									},
									"analytics": {
										"contexts": [{
											"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
											"data": {
												"recipe_id": "664375b30daa4456de253728",
												"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
											}
										}]
									},
									"layout": {
										"type": "FLOW",
										"axis": "HORIZONTAL"
									},
									"type": "BLOCK",
									"children": [{
										"type": "PML",
										"id": "recipe-content-tabs-item-ingredients",
										"size": {
											"crossAxis": "12g",
											"mainAxis": "SCREEN_WIDTH / 2"
										},
										"pml": {
											"pmlVersion": "0.1.0",
											"images": {},
											"component": {
												"testID": "RecipeDetailsPage.TabItem.ingredients",
												"accessible": true,
												"hideFromAccessibility": true,
												"onPress": {
													"type": "EXPRESSION",
													"expression": "() => {\n            if (RecipeDetailsPageState.focusedTabIdState === `ingredients`) return;\n            RecipeDetailsPageState.focusedTabIdState = `ingredients`;\n          }"
												},
												"activeOpacity": 0.5,
												"hitSlop": {
													"vertical": 4,
													"horizontal": 4
												},
												"type": "TOUCHABLE",
												"child": {
													"height": 65,
													"width": "100%",
													"type": "CONTAINER",
													"child": {
														"axis": "VERTICAL",
														"distribution": "SPACE_BETWEEN",
														"alignment": "CENTER",
														"spacing": 4,
														"padding": {
															"top": 8,
															"bottom": 8
														},
														"type": "STACK",
														"children": [{
															"iconKey": "leafOutlined",
															"width": 24,
															"height": 24,
															"color": {
																"type": "EXPRESSION",
																"expression": "RecipeDetailsPageState.focusedTabIdState ===`ingredients` ? '#295813' : '#5b534e'"
															},
															"type": "ICON"
														}, {
															"textAlignment": "CENTER",
															"textType": "SUBTITLE2",
															"markdown": {
																"type": "EXPRESSION",
																"expression": "(() => {\n                  const selected = RecipeDetailsPageState.focusedTabIdState ===`ingredients`;\n                  const color = `#(${selected ? '#295813' : '#5b534e'})`;\n                  return `${color}Zutaten${color}`\n                })()"
															},
															"type": "RICH_TEXT"
														}, {
															"width": "100%",
															"height": 2,
															"borderRadius": 2,
															"hideFromAccessibility": true,
															"backgroundColor": {
																"type": "EXPRESSION",
																"expression": "RecipeDetailsPageState.focusedTabIdState ===`ingredients` ? '#295813' : '#f8f5f2'"
															},
															"absolutePosition": {
																"bottom": 0
															},
															"type": "CONTAINER",
															"child": null
														}]
													}
												}
											}
										}
									}, {
										"type": "PML",
										"id": "recipe-content-tabs-item-instructions",
										"size": {
											"crossAxis": "12g",
											"mainAxis": "SCREEN_WIDTH / 2"
										},
										"pml": {
											"pmlVersion": "0.1.0",
											"images": {},
											"component": {
												"testID": "RecipeDetailsPage.TabItem.instructions",
												"accessible": true,
												"hideFromAccessibility": true,
												"onPress": {
													"type": "EXPRESSION",
													"expression": "() => {\n            if (RecipeDetailsPageState.focusedTabIdState === `instructions`) return;\n            RecipeDetailsPageState.focusedTabIdState = `instructions`;\n          }"
												},
												"activeOpacity": 0.5,
												"hitSlop": {
													"vertical": 4,
													"horizontal": 4
												},
												"type": "TOUCHABLE",
												"child": {
													"height": 65,
													"width": "100%",
													"type": "CONTAINER",
													"child": {
														"axis": "VERTICAL",
														"distribution": "SPACE_BETWEEN",
														"alignment": "CENTER",
														"spacing": 4,
														"padding": {
															"top": 8,
															"bottom": 8
														},
														"type": "STACK",
														"children": [{
															"iconKey": "whisk",
															"width": 24,
															"height": 24,
															"color": {
																"type": "EXPRESSION",
																"expression": "RecipeDetailsPageState.focusedTabIdState ===`instructions` ? '#295813' : '#5b534e'"
															},
															"type": "ICON"
														}, {
															"textAlignment": "CENTER",
															"textType": "SUBTITLE2",
															"markdown": {
																"type": "EXPRESSION",
																"expression": "(() => {\n                  const selected = RecipeDetailsPageState.focusedTabIdState ===`instructions`;\n                  const color = `#(${selected ? '#295813' : '#5b534e'})`;\n                  return `${color}Zubereitung${color}`\n                })()"
															},
															"type": "RICH_TEXT"
														}, {
															"width": "100%",
															"height": 2,
															"borderRadius": 2,
															"hideFromAccessibility": true,
															"backgroundColor": {
																"type": "EXPRESSION",
																"expression": "RecipeDetailsPageState.focusedTabIdState ===`instructions` ? '#295813' : '#f8f5f2'"
															},
															"absolutePosition": {
																"bottom": 0
															},
															"type": "CONTAINER",
															"child": null
														}]
													}
												}
											}
										}
									}]
								}, {
									"id": "recipe-content-tabs-list-ingredients",
									"size": {
										"crossAxis": "12g"
									},
									"layout": {
										"type": "FLOW",
										"axis": "VERTICAL"
									},
									"analytics": {
										"contexts": [{
											"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
											"data": {
												"recipe_id": "664375b30daa4456de253728",
												"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
											}
										}]
									},
									"isHidden": {
										"type": "EXPRESSION",
										"expression": "RecipeDetailsPageState.focusedTabIdState !== 'ingredients'"
									},
									"type": "BLOCK",
									"children": [{
										"id": "recipe-ingredients-selling-units-section",
										"size": {
											"crossAxis": "12g"
										},
										"layout": {
											"type": "FLOW",
											"axis": "VERTICAL",
											"padding": {
												"top": 16
											}
										},
										"type": "BLOCK",
										"children": [{
											"id": "recipe-details-selling-unit-list-section-new",
											"layout": {
												"type": "FLOW",
												"axis": "VERTICAL",
												"padding": {
													"left": 8,
													"right": 8
												}
											},
											"size": {
												"crossAxis": "12g"
											},
											"type": "BLOCK",
											"children": [{
												"id": "recipe-details-selling-unit-list",
												"layout": {
													"type": "FLOW",
													"axis": "VERTICAL",
													"spacing": {
														"mainAxis": 4,
														"crossAxis": 4
													}
												},
												"size": {
													"crossAxis": "12g"
												},
												"type": "BLOCK",
												"children": [{
													"type": "PML",
													"id": "selling-unit-s1023297-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 144)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 1,
																	"y": 1
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1023297"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1023297",
															"name": "Gut&Günstig Weizenbrötchen zum Aufbacken",
															"decorators": [],
															"display_price": 135,
															"image_id": "2768673aa56006bcaa9668bd66f026a4833b022e960e4de5228a99646305f6cf",
															"max_count": 99,
															"unit_quantity": "8 Stück"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "2768673aa56006bcaa9668bd66f026a4833b022e960e4de5228a99646305f6cf"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1023297',\n              \"ingredient_id\": '7115c0e8-0879-411e-8b36-a5812a1faee9',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#F0E8DD",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "2768673aa56006bcaa9668bd66f026a4833b022e960e4de5228a99646305f6cf"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": [{
																							"absolutePosition": {
																								"top": 8,
																								"right": 8
																							},
																							"type": "CONTAINER",
																							"child": {
																								"axis": "HORIZONTAL",
																								"spacing": 10,
																								"type": "STACK",
																								"children": [{
																									"onPress": {
																										"actionType": "OPEN",
																										"target": "app.picnic://store/page;id=product-details-page-root,id=s1023297&show_category_action=true&show_remove_from_purchases_page_action=false"
																									},
																									"activeOpacity": 0.8,
																									"hitSlop": {
																										"horizontal": 22,
																										"vertical": 22
																									},
																									"type": "TOUCHABLE",
																									"child": {
																										"backgroundColor": "rgba(159, 114, 52, 0.15)",
																										"borderRadius": 4,
																										"height": 22,
																										"padding": {
																											"left": 6,
																											"right": 4
																										},
																										"type": "CONTAINER",
																										"child": {
																											"axis": "HORIZONTAL",
																											"height": "100%",
																											"spacing": 4,
																											"alignment": "CENTER",
																											"type": "STACK",
																											"children": [{
																												"iconKey": "percentage",
																												"fallback": {
																													"id": "picnic-page/bc8d8c0af03f076bd02cf8860ee7ef5643b3f5b9c5b9bfb5831e40a7cd3fa728"
																												},
																												"color": "rgba(159, 114, 52, 1)",
																												"width": 14,
																												"height": 14,
																												"type": "ICON"
																											}, {
																												"iconKey": "rightChevron",
																												"color": "rgba(159, 114, 52, 1)",
																												"width": 5,
																												"height": 9,
																												"type": "ICON"
																											}]
																										}
																									}
																								}]
																							}
																						}]
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1023297&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"height": 16,
																				"iconKey": "leaf",
																				"width": 12,
																				"fallback": {
																					"id": "picnic-page/bdd43f3dd2ccecfb24215473e1e37e61b37550c0b59f300c522e2081a069e2e9"
																				},
																				"color": "#9F7234",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#9F7234)Vegan#(#9F7234)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)Weizenbrötchen#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"textAttributes": {
																					"size": 14,
																					"weight": "REGULAR",
																					"color": "#333333"
																				},
																				"numberOfLines": 1,
																				"markdown": "#(#333333)Gut&Günstig#(#333333)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "1.35",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "8 Stück",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€2.41/kg",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "#(#84817d)Zuhause aufbacken#(#84817d)",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1023297",
																"color": "#9F7234",
																"secondaryColor": "#F0E8DD",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#9F7234",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1023297",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1023297',\n              \"ingredient_id\": '7115c0e8-0879-411e-8b36-a5812a1faee9',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1023297',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1023297",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Weizenbrötchen zum Aufbacken, von Gut&Günstig, zu, 1 € 35 cents, 8 Stück",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen, zwei Mal tippen mit zwei Fingern, um zum Bündelbonus zu gelangen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1023297&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1023297',\n              \"ingredient_id\": '7115c0e8-0879-411e-8b36-a5812a1faee9',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1023297',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "magicTap",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1023297"
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Weizenbrötchen zum Aufbacken, von Gut&Günstig",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1023297',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1023297\",\"sellingUnitPrice\":135,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}, {
													"type": "PML",
													"id": "selling-unit-s1020276-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 110)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 2,
																	"y": 1
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1020276"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1020276",
															"name": "Bonduelle Goldmais",
															"decorators": [],
															"display_price": 149,
															"image_id": "c0cbccde1a0e6bc7a4e8775a8130c734ed72adf7bdf0aea580ec08be1bd10fc3",
															"max_count": 10,
															"unit_quantity": "140g"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "c0cbccde1a0e6bc7a4e8775a8130c734ed72adf7bdf0aea580ec08be1bd10fc3"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020276',\n              \"ingredient_id\": 'c92d5ce0-2670-4dc6-8a6c-e45a6aa443da',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#F0E8DD",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "c0cbccde1a0e6bc7a4e8775a8130c734ed72adf7bdf0aea580ec08be1bd10fc3"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": [{
																							"absolutePosition": {
																								"top": 8,
																								"right": 8
																							},
																							"type": "CONTAINER",
																							"child": {
																								"axis": "HORIZONTAL",
																								"spacing": 10,
																								"type": "STACK",
																								"children": [{
																									"onPress": {
																										"actionType": "OPEN",
																										"target": "app.picnic://store/page;id=product-details-page-root,id=s1020276&show_category_action=true&show_remove_from_purchases_page_action=false"
																									},
																									"activeOpacity": 0.8,
																									"hitSlop": {
																										"horizontal": 22,
																										"vertical": 22
																									},
																									"type": "TOUCHABLE",
																									"child": {
																										"backgroundColor": "rgba(159, 114, 52, 0.15)",
																										"borderRadius": 4,
																										"height": 22,
																										"padding": {
																											"left": 6,
																											"right": 4
																										},
																										"type": "CONTAINER",
																										"child": {
																											"axis": "HORIZONTAL",
																											"height": "100%",
																											"spacing": 4,
																											"alignment": "CENTER",
																											"type": "STACK",
																											"children": [{
																												"iconKey": "percentage",
																												"fallback": {
																													"id": "picnic-page/bc8d8c0af03f076bd02cf8860ee7ef5643b3f5b9c5b9bfb5831e40a7cd3fa728"
																												},
																												"color": "rgba(159, 114, 52, 1)",
																												"width": 14,
																												"height": 14,
																												"type": "ICON"
																											}, {
																												"iconKey": "rightChevron",
																												"color": "rgba(159, 114, 52, 1)",
																												"width": 5,
																												"height": 9,
																												"type": "ICON"
																											}]
																										}
																									}
																								}]
																							}
																						}]
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1020276&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#9F7234)Ohne Gentechnik#(#9F7234)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)Goldmais#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"textAttributes": {
																					"size": 14,
																					"weight": "REGULAR",
																					"color": "#333333"
																				},
																				"numberOfLines": 1,
																				"markdown": "#(#333333)Bonduelle#(#333333)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "1.49",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"overflow": "hidden",
																				"borderRadius": 4,
																				"borderWidth": 1,
																				"borderColor": "#5b534e",
																				"backgroundColor": "#ffffff",
																				"padding": {
																					"top": 1,
																					"bottom": 1,
																					"left": 3,
																					"right": 3
																				},
																				"type": "CONTAINER",
																				"child": {
																					"textAttributes": {
																						"size": 10,
																						"weight": "MEDIUM",
																						"color": "#333333"
																					},
																					"markdown": "#(#5b534e)Klein#(#5b534e)",
																					"type": "RICH_TEXT"
																				}
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "140g",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€9.93/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1020276",
																"color": "#9F7234",
																"secondaryColor": "#F0E8DD",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#9F7234",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1020276",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020276',\n              \"ingredient_id\": 'c92d5ce0-2670-4dc6-8a6c-e45a6aa443da',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020276',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1020276",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Goldmais, von Bonduelle, zu, 1 € 49 cents, 140g",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen, zwei Mal tippen mit zwei Fingern, um zum Bündelbonus zu gelangen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1020276&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020276',\n              \"ingredient_id\": 'c92d5ce0-2670-4dc6-8a6c-e45a6aa443da',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020276',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "magicTap",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1020276"
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Goldmais, von Bonduelle",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020276',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020276\",\"sellingUnitPrice\":149,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}, {
													"type": "PML",
													"id": "selling-unit-s1029546-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 110)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 1,
																	"y": 2
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1029546"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1029546",
															"name": "Mini Pflaumen Tomaten",
															"decorators": [],
															"display_price": 249,
															"image_id": "47c793c66deac3ad4f832a56f199cee1ddc53a676f7a985785fa92c461511379",
															"max_count": 99,
															"unit_quantity": "250g"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "397ac3b943e0017fe6dae3125a20e7123b45a9b20ef8e36aeb2a201749981244"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029546',\n              \"ingredient_id\": '7e329eff-0b40-4f50-a425-7b7732ca7469',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#E7ECD7",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "397ac3b943e0017fe6dae3125a20e7123b45a9b20ef8e36aeb2a201749981244"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": []
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1029546&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#7C9326)Perfekt als Snack#(#7C9326)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)Mini Pflaumen Tomaten#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "2.49",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "250g",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€9.96/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1029546",
																"color": "#7C9326",
																"secondaryColor": "#E7ECD7",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#7C9326",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1029546",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029546',\n              \"ingredient_id\": '7e329eff-0b40-4f50-a425-7b7732ca7469',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029546',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1029546",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Mini Pflaumen Tomaten, zu, 2 € 49 cents, 250g",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1029546&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029546',\n              \"ingredient_id\": '7e329eff-0b40-4f50-a425-7b7732ca7469',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029546',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Mini Pflaumen Tomaten",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029546',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029546\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}, {
													"type": "PML",
													"id": "selling-unit-s1032352-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 127)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 2,
																	"y": 2
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1032352"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1032352",
															"name": "Arla Finello Gratinkäse gerieben",
															"decorators": [],
															"display_price": 249,
															"image_id": "78d177e59afa65839fe5ecd8d3c98d8a380667947dd5b38032fa7a358e09e02f",
															"max_count": 99,
															"unit_quantity": "150g"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "78d177e59afa65839fe5ecd8d3c98d8a380667947dd5b38032fa7a358e09e02f"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1032352',\n              \"ingredient_id\": '269b5cce-cb5f-4f38-ae05-f2b8deef5bf6',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#E3EEEE",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "78d177e59afa65839fe5ecd8d3c98d8a380667947dd5b38032fa7a358e09e02f"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": [{
																							"absolutePosition": {
																								"top": 8,
																								"right": 8
																							},
																							"type": "CONTAINER",
																							"child": {
																								"axis": "HORIZONTAL",
																								"spacing": 10,
																								"type": "STACK",
																								"children": [{
																									"onPress": {
																										"actionType": "OPEN",
																										"target": "app.picnic://store/page;id=product-details-page-root,id=s1032352&show_category_action=true&show_remove_from_purchases_page_action=false"
																									},
																									"activeOpacity": 0.8,
																									"hitSlop": {
																										"horizontal": 22,
																										"vertical": 22
																									},
																									"type": "TOUCHABLE",
																									"child": {
																										"backgroundColor": "rgba(38, 132, 132, 0.15)",
																										"borderRadius": 4,
																										"height": 22,
																										"padding": {
																											"left": 6,
																											"right": 4
																										},
																										"type": "CONTAINER",
																										"child": {
																											"axis": "HORIZONTAL",
																											"height": "100%",
																											"spacing": 4,
																											"alignment": "CENTER",
																											"type": "STACK",
																											"children": [{
																												"iconKey": "percentage",
																												"fallback": {
																													"id": "picnic-page/bc8d8c0af03f076bd02cf8860ee7ef5643b3f5b9c5b9bfb5831e40a7cd3fa728"
																												},
																												"color": "rgba(38, 132, 132, 1)",
																												"width": 14,
																												"height": 14,
																												"type": "ICON"
																											}, {
																												"iconKey": "rightChevron",
																												"color": "rgba(38, 132, 132, 1)",
																												"width": 5,
																												"height": 9,
																												"type": "ICON"
																											}]
																										}
																									}
																								}]
																							}
																						}]
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1032352&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#268484)Aromatisch#(#268484)",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#268484",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#268484)Herzhaft#(#268484)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)Gratinkäse gerieben#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"textAttributes": {
																					"size": 14,
																					"weight": "REGULAR",
																					"color": "#333333"
																				},
																				"numberOfLines": 1,
																				"markdown": "#(#333333)Arla Finello#(#333333)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "2.49",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "150g",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€16.60/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1032352",
																"color": "#268484",
																"secondaryColor": "#E3EEEE",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#268484",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1032352",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1032352',\n              \"ingredient_id\": '269b5cce-cb5f-4f38-ae05-f2b8deef5bf6',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1032352',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1032352",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Gratinkäse gerieben, von Arla Finello, zu, 2 € 49 cents, 150g",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen, zwei Mal tippen mit zwei Fingern, um zum Bündelbonus zu gelangen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1032352&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1032352',\n              \"ingredient_id\": '269b5cce-cb5f-4f38-ae05-f2b8deef5bf6',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1032352',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "magicTap",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1032352"
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Gratinkäse gerieben, von Arla Finello",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1032352',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1032352\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}, {
													"type": "PML",
													"id": "selling-unit-s1027982-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 110)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 1,
																	"y": 3
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1027982"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1027982",
															"name": "Bio Paprika mix",
															"decorators": [],
															"display_price": 299,
															"image_id": "1186b8a94189869e186fa96f6cace0f5499179b0113ce525f4a7140075c24a94",
															"max_count": 99,
															"unit_quantity": "400g"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "d3a81d14c41f1549fa52f28a79d0f37f7542d9e8c190da8276bd59cf90b80d9b"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1027982',\n              \"ingredient_id\": '9109c76c-f450-4263-91eb-1e57ac4acf93',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#E7ECD7",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "d3a81d14c41f1549fa52f28a79d0f37f7542d9e8c190da8276bd59cf90b80d9b"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": [{
																							"absolutePosition": {
																								"left": 8,
																								"top": 8
																							},
																							"type": "CONTAINER",
																							"child": {
																								"axis": "HORIZONTAL",
																								"spacing": 10,
																								"type": "STACK",
																								"children": []
																							}
																						}]
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1027982&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#7C9326)Versch. Kombis möglich#(#7C9326)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)#(#628003)**Bio**#(#628003) Paprika mix#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "2.99",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "400g",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€7.48/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1027982",
																"color": "#7C9326",
																"secondaryColor": "#E7ECD7",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#7C9326",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1027982",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1027982',\n              \"ingredient_id\": '9109c76c-f450-4263-91eb-1e57ac4acf93',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1027982',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1027982",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Bio Paprika mix, zu, 2 € 99 cents, 400g",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1027982&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1027982',\n              \"ingredient_id\": '9109c76c-f450-4263-91eb-1e57ac4acf93',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1027982',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Bio Paprika mix",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1027982',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1027982\",\"sellingUnitPrice\":299,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}, {
													"type": "PML",
													"id": "selling-unit-s1060088-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 127)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 2,
																	"y": 3
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1060088"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1060088",
															"name": "Edeka Heimatliebe Bio Champignons braun mittel",
															"decorators": [],
															"display_price": 279,
															"image_id": "eee0d2be885f3e19a709e3d9330f215063d2839e23825956303ff421f0bc4ab7",
															"max_count": 99,
															"unit_quantity": "200g"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "eee0d2be885f3e19a709e3d9330f215063d2839e23825956303ff421f0bc4ab7"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060088',\n              \"ingredient_id\": 'b152eb9a-0b3b-4ab3-9da7-bbf2b68fba3a',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#E7ECD7",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "eee0d2be885f3e19a709e3d9330f215063d2839e23825956303ff421f0bc4ab7"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": [{
																							"absolutePosition": {
																								"left": 8,
																								"top": 8
																							},
																							"type": "CONTAINER",
																							"child": {
																								"axis": "HORIZONTAL",
																								"spacing": 10,
																								"type": "STACK",
																								"children": []
																							}
																						}]
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1060088&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"height": 16,
																				"iconKey": "locationPin",
																				"width": 12,
																				"fallback": {
																					"id": "picnic-page/086ce3fe340645059f22a22669deef0b974831ffb0f024579bce67d1a9b5493b"
																				},
																				"color": "#7C9326",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#7C9326)Regional#(#7C9326)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)#(#628003)**Bio**#(#628003) Champignons braun mittel#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"textAttributes": {
																					"size": 14,
																					"weight": "REGULAR",
																					"color": "#333333"
																				},
																				"numberOfLines": 1,
																				"markdown": "#(#333333)Edeka Heimatliebe#(#333333)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "2.79",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"overflow": "hidden",
																				"borderRadius": 4,
																				"borderWidth": 1,
																				"borderColor": "#5b534e",
																				"backgroundColor": "#ffffff",
																				"padding": {
																					"top": 1,
																					"bottom": 1,
																					"left": 3,
																					"right": 3
																				},
																				"type": "CONTAINER",
																				"child": {
																					"textAttributes": {
																						"size": 10,
																						"weight": "MEDIUM",
																						"color": "#333333"
																					},
																					"markdown": "#(#5b534e)Klein#(#5b534e)",
																					"type": "RICH_TEXT"
																				}
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "200g",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€13.95/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1060088",
																"color": "#7C9326",
																"secondaryColor": "#E7ECD7",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#7C9326",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1060088",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060088',\n              \"ingredient_id\": 'b152eb9a-0b3b-4ab3-9da7-bbf2b68fba3a',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060088',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1060088",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Bio Champignons braun mittel, von Edeka Heimatliebe, zu, 2 € 79 cents, 200g",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1060088&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060088',\n              \"ingredient_id\": 'b152eb9a-0b3b-4ab3-9da7-bbf2b68fba3a',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060088',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Bio Champignons braun mittel, von Edeka Heimatliebe",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060088',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060088\",\"sellingUnitPrice\":279,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}, {
													"type": "PML",
													"id": "selling-unit-s1021966-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 127)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 1,
																	"y": 4
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1021966"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1021966",
															"name": "Gut&Günstig Schlagsahne haltbar 30%",
															"decorators": [],
															"display_price": 109,
															"image_id": "17ccc69371f3b09f6d8a84ad8d9c9fc420d6e48efe588f68342054a96360c0ef",
															"max_count": 10,
															"unit_quantity": "200g"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "17ccc69371f3b09f6d8a84ad8d9c9fc420d6e48efe588f68342054a96360c0ef"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1021966',\n              \"ingredient_id\": 'c3882ac8-aa5d-4422-95fd-f9cdba806071',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#E3EEEE",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "17ccc69371f3b09f6d8a84ad8d9c9fc420d6e48efe588f68342054a96360c0ef"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": [{
																							"absolutePosition": {
																								"top": 8,
																								"right": 8
																							},
																							"type": "CONTAINER",
																							"child": {
																								"axis": "HORIZONTAL",
																								"spacing": 10,
																								"type": "STACK",
																								"children": [{
																									"onPress": {
																										"actionType": "OPEN",
																										"target": "app.picnic://store/page;id=product-details-page-root,id=s1021966&show_category_action=true&show_remove_from_purchases_page_action=false"
																									},
																									"activeOpacity": 0.8,
																									"hitSlop": {
																										"horizontal": 22,
																										"vertical": 22
																									},
																									"type": "TOUCHABLE",
																									"child": {
																										"backgroundColor": "rgba(38, 132, 132, 0.15)",
																										"borderRadius": 4,
																										"height": 22,
																										"padding": {
																											"left": 6,
																											"right": 4
																										},
																										"type": "CONTAINER",
																										"child": {
																											"axis": "HORIZONTAL",
																											"height": "100%",
																											"spacing": 4,
																											"alignment": "CENTER",
																											"type": "STACK",
																											"children": [{
																												"iconKey": "percentage",
																												"fallback": {
																													"id": "picnic-page/bc8d8c0af03f076bd02cf8860ee7ef5643b3f5b9c5b9bfb5831e40a7cd3fa728"
																												},
																												"color": "rgba(38, 132, 132, 1)",
																												"width": 14,
																												"height": 14,
																												"type": "ICON"
																											}, {
																												"iconKey": "rightChevron",
																												"color": "rgba(38, 132, 132, 1)",
																												"width": 5,
																												"height": 9,
																												"type": "ICON"
																											}]
																										}
																									}
																								}]
																							}
																						}]
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1021966&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#268484)Ohne Gentechnik#(#268484)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)H-Schlagsahne 30%#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"textAttributes": {
																					"size": 14,
																					"weight": "REGULAR",
																					"color": "#333333"
																				},
																				"numberOfLines": 1,
																				"markdown": "#(#333333)Gut&Günstig#(#333333)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "1.09",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "200g",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€5.45/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1021966",
																"color": "#268484",
																"secondaryColor": "#E3EEEE",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#268484",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1021966",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1021966',\n              \"ingredient_id\": 'c3882ac8-aa5d-4422-95fd-f9cdba806071',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1021966',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1021966",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Schlagsahne haltbar 30%, von Gut&Günstig, zu, 1 € 9 cents, 200g",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen, zwei Mal tippen mit zwei Fingern, um zum Bündelbonus zu gelangen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1021966&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1021966',\n              \"ingredient_id\": 'c3882ac8-aa5d-4422-95fd-f9cdba806071',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1021966',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "magicTap",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1021966"
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Schlagsahne haltbar 30%, von Gut&Günstig",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1021966',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1021966\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}, {
													"type": "PML",
													"id": "selling-unit-s1060062-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 110)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 2,
																	"y": 4
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1060062"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1060062",
															"name": "Basilikum",
															"decorators": [],
															"display_price": 129,
															"image_id": "9db16208071e85a3410b6a1bdde35a0b3c06e2244801b3641950b4651faf15d2",
															"max_count": 20,
															"unit_quantity": "25g"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "14f25aa83e4adaaeddc1b4abb70f096471c6b02cc998baf9cdb074c9e91d7b82"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060062',\n              \"ingredient_id\": '12151ef8-b0d5-4266-b33f-93f2259f9b81',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#E7ECD7",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "14f25aa83e4adaaeddc1b4abb70f096471c6b02cc998baf9cdb074c9e91d7b82"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": []
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1060062&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)Basilikum#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "1.29",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "25g",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€51.60/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1060062",
																"color": "#7C9326",
																"secondaryColor": "#E7ECD7",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#7C9326",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1060062",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060062',\n              \"ingredient_id\": '12151ef8-b0d5-4266-b33f-93f2259f9b81',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060062',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1060062",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Basilikum, zu, 1 € 29 cents, 25g",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1060062&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060062',\n              \"ingredient_id\": '12151ef8-b0d5-4266-b33f-93f2259f9b81',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060062',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Basilikum",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1060062',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1060062\",\"sellingUnitPrice\":129,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}, {
													"type": "PML",
													"id": "selling-unit-s1029170-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 127)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 1,
																	"y": 5
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1029170"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1029170",
															"name": "Gut&Günstig Haltbarer Schmand 24% Fett",
															"decorators": [],
															"display_price": 99,
															"image_id": "55ce193b7f402c483f75c2ca18b4e85e74f97b7d93128cd5755b6542cda6187d",
															"max_count": 99,
															"unit_quantity": "200g"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "55ce193b7f402c483f75c2ca18b4e85e74f97b7d93128cd5755b6542cda6187d"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029170',\n              \"ingredient_id\": '359a6593-10a2-4496-aa6e-4421234479e0',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#E3EEEE",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "55ce193b7f402c483f75c2ca18b4e85e74f97b7d93128cd5755b6542cda6187d"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": [{
																							"absolutePosition": {
																								"top": 8,
																								"right": 8
																							},
																							"type": "CONTAINER",
																							"child": {
																								"axis": "HORIZONTAL",
																								"spacing": 10,
																								"type": "STACK",
																								"children": [{
																									"onPress": {
																										"actionType": "OPEN",
																										"target": "app.picnic://store/page;id=product-details-page-root,id=s1029170&show_category_action=true&show_remove_from_purchases_page_action=false"
																									},
																									"activeOpacity": 0.8,
																									"hitSlop": {
																										"horizontal": 22,
																										"vertical": 22
																									},
																									"type": "TOUCHABLE",
																									"child": {
																										"backgroundColor": "rgba(38, 132, 132, 0.15)",
																										"borderRadius": 4,
																										"height": 22,
																										"padding": {
																											"left": 6,
																											"right": 4
																										},
																										"type": "CONTAINER",
																										"child": {
																											"axis": "HORIZONTAL",
																											"height": "100%",
																											"spacing": 4,
																											"alignment": "CENTER",
																											"type": "STACK",
																											"children": [{
																												"iconKey": "percentage",
																												"fallback": {
																													"id": "picnic-page/bc8d8c0af03f076bd02cf8860ee7ef5643b3f5b9c5b9bfb5831e40a7cd3fa728"
																												},
																												"color": "rgba(38, 132, 132, 1)",
																												"width": 14,
																												"height": 14,
																												"type": "ICON"
																											}, {
																												"iconKey": "rightChevron",
																												"color": "rgba(38, 132, 132, 1)",
																												"width": 5,
																												"height": 9,
																												"type": "ICON"
																											}]
																										}
																									}
																								}]
																							}
																						}]
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1029170&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#268484)Ohne Gentechnik#(#268484)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)Haltbarer Schmand 24%#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"textAttributes": {
																					"size": 14,
																					"weight": "REGULAR",
																					"color": "#333333"
																				},
																				"numberOfLines": 1,
																				"markdown": "#(#333333)Gut&Günstig#(#333333)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "0.99",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "200g",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€4.95/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1029170",
																"color": "#268484",
																"secondaryColor": "#E3EEEE",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#268484",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1029170",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029170',\n              \"ingredient_id\": '359a6593-10a2-4496-aa6e-4421234479e0',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029170',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1029170",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Haltbarer Schmand 24% Fett, von Gut&Günstig, zu, 0 € 99 cents, 200g",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen, zwei Mal tippen mit zwei Fingern, um zum Bündelbonus zu gelangen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1029170&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029170',\n              \"ingredient_id\": '359a6593-10a2-4496-aa6e-4421234479e0',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029170',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "magicTap",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1029170"
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Haltbarer Schmand 24% Fett, von Gut&Günstig",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1029170',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1029170\",\"sellingUnitPrice\":99,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}, {
													"type": "PML",
													"id": "selling-unit-s1087083-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 127)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 2,
																	"y": 5
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1087083"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1087083",
															"name": "Ostmann Italienische Kräuter",
															"decorators": [],
															"display_price": 213,
															"image_id": "2a7e30361ddb98a6ed90e14316e47bb42a28b5d284439634ff958aeeed1376cc",
															"max_count": 99,
															"unit_quantity": "2 x 12.5g"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "2a7e30361ddb98a6ed90e14316e47bb42a28b5d284439634ff958aeeed1376cc"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1087083',\n              \"ingredient_id\": 'b4f66fff-b8f5-4ecd-aea8-6e71feb5b7fe',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#F0E8DD",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "2a7e30361ddb98a6ed90e14316e47bb42a28b5d284439634ff958aeeed1376cc"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": [{
																							"absolutePosition": {
																								"top": 8,
																								"right": 8
																							},
																							"type": "CONTAINER",
																							"child": {
																								"axis": "HORIZONTAL",
																								"spacing": 10,
																								"type": "STACK",
																								"children": [{
																									"onPress": {
																										"actionType": "OPEN",
																										"target": "app.picnic://store/page;id=product-details-page-root,id=s1087083&show_category_action=true&show_remove_from_purchases_page_action=false"
																									},
																									"activeOpacity": 0.8,
																									"hitSlop": {
																										"horizontal": 22,
																										"vertical": 22
																									},
																									"type": "TOUCHABLE",
																									"child": {
																										"backgroundColor": "rgba(159, 114, 52, 0.15)",
																										"borderRadius": 4,
																										"height": 22,
																										"padding": {
																											"left": 6,
																											"right": 4
																										},
																										"type": "CONTAINER",
																										"child": {
																											"axis": "HORIZONTAL",
																											"height": "100%",
																											"spacing": 4,
																											"alignment": "CENTER",
																											"type": "STACK",
																											"children": [{
																												"iconKey": "percentage",
																												"fallback": {
																													"id": "picnic-page/bc8d8c0af03f076bd02cf8860ee7ef5643b3f5b9c5b9bfb5831e40a7cd3fa728"
																												},
																												"color": "rgba(159, 114, 52, 1)",
																												"width": 14,
																												"height": 14,
																												"type": "ICON"
																											}, {
																												"iconKey": "rightChevron",
																												"color": "rgba(159, 114, 52, 1)",
																												"width": 5,
																												"height": 9,
																												"type": "ICON"
																											}]
																										}
																									}
																								}]
																							}
																						}]
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1087083&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#9F7234)Gerebelt#(#9F7234)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)Italienische Kräuter#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"textAttributes": {
																					"size": 14,
																					"weight": "REGULAR",
																					"color": "#333333"
																				},
																				"numberOfLines": 1,
																				"markdown": "#(#333333)Ostmann#(#333333)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "END",
																				"spacing": 6,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"distribution": "START",
																					"alignment": "CENTER",
																					"spacing": 2,
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "#(#333333)2#(#333333)",
																						"type": "RICH_TEXT"
																					}, {
																						"iconKey": "crossSmall",
																						"width": 7,
																						"height": 7,
																						"color": "#333333",
																						"type": "ICON"
																					}, {
																						"axis": "HORIZONTAL",
																						"alignment": "CENTER",
																						"type": "STACK",
																						"children": [{
																							"textAlignment": "END",
																							"textAttributes": {
																								"size": 14,
																								"weight": "BOLD",
																								"color": "#333333"
																							},
																							"markdown": "2.13",
																							"type": "RICH_TEXT"
																						}]
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "2 x 12.5g",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€170.40/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1087083",
																"color": "#9F7234",
																"secondaryColor": "#F0E8DD",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#9F7234",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1087083",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1087083',\n              \"ingredient_id\": 'b4f66fff-b8f5-4ecd-aea8-6e71feb5b7fe',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1087083',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1087083",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Italienische Kräuter, von Ostmann, zu, 4 € 26 cents, 2 x 12.5g",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen, zwei Mal tippen mit zwei Fingern, um zum Bündelbonus zu gelangen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1087083&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1087083',\n              \"ingredient_id\": 'b4f66fff-b8f5-4ecd-aea8-6e71feb5b7fe',\n              \"ingredient_type\": 'CORE'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1087083',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "magicTap",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1087083"
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Italienische Kräuter, von Ostmann",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1087083',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1087083\",\"sellingUnitPrice\":426,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}]
											}]
										}, {
											"id": "recipe-details-selling-unit-list-section-new__2",
											"layout": {
												"type": "FLOW",
												"axis": "VERTICAL",
												"padding": {
													"left": 8,
													"right": 8
												}
											},
											"size": {
												"crossAxis": "12g"
											},
											"type": "BLOCK",
											"children": [{
												"type": "PML",
												"id": "recipe-details-selling-unit-list-section-new-header-VARIATION",
												"size": {
													"crossAxis": "12g",
													"mainAxis": 50
												},
												"pml": {
													"pmlVersion": "0.1.0",
													"images": {},
													"component": {
														"axis": "HORIZONTAL",
														"alignment": "CENTER",
														"distribution": "SPACE_BETWEEN",
														"padding": {
															"top": 8,
															"bottom": 8,
															"right": 8,
															"left": 8
														},
														"height": "100%",
														"width": "100%",
														"type": "STACK",
														"children": [{
															"markdown": "Für weitere Kreationen",
															"textAlignment": "START",
															"textAttributes": {
																"size": 20,
																"weight": "SEMIBOLD",
																"color": "#333333"
															},
															"type": "RICH_TEXT"
														}]
													}
												}
											}, {
												"id": "recipe-details-selling-unit-list__2",
												"layout": {
													"type": "FLOW",
													"axis": "VERTICAL",
													"spacing": {
														"mainAxis": 4,
														"crossAxis": 4
													}
												},
												"size": {
													"crossAxis": "12g"
												},
												"type": "BLOCK",
												"children": [{
													"type": "PML",
													"id": "selling-unit-s1025987-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 110)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 1,
																	"y": 1
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1025987"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1025987",
															"name": "Zucchini",
															"decorators": [],
															"display_price": 109,
															"image_id": "35edd2ae34224e99d6234efa91ed39bc09e76981d29f64fcf1f243f4653987c2",
															"max_count": 99,
															"unit_quantity": "1 Stück"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "0672732563afb83bb38eba2fd335fa161c9d350d574430d07fcd0e0f8cdfac52"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1025987',\n              \"ingredient_id\": 'be877bbd-de71-42cf-8f7a-3cd56764cf6e',\n              \"ingredient_type\": 'VARIATION'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#E7ECD7",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "0672732563afb83bb38eba2fd335fa161c9d350d574430d07fcd0e0f8cdfac52"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": []
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1025987&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)Zucchini#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "1.09",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "1 Stück",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€4.36/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1025987",
																"color": "#7C9326",
																"secondaryColor": "#E7ECD7",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#7C9326",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1025987",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1025987',\n              \"ingredient_id\": 'be877bbd-de71-42cf-8f7a-3cd56764cf6e',\n              \"ingredient_type\": 'VARIATION'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1025987',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1025987",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Zucchini, zu, 1 € 9 cents, 1 Stück",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1025987&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1025987',\n              \"ingredient_id\": 'be877bbd-de71-42cf-8f7a-3cd56764cf6e',\n              \"ingredient_type\": 'VARIATION'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1025987',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Zucchini",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1025987',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1025987\",\"sellingUnitPrice\":109,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}]
											}]
										}, {
											"id": "recipe-details-selling-unit-list-section-new__3",
											"layout": {
												"type": "FLOW",
												"axis": "VERTICAL",
												"padding": {
													"left": 8,
													"right": 8
												}
											},
											"size": {
												"crossAxis": "12g"
											},
											"type": "BLOCK",
											"children": [{
												"type": "PML",
												"id": "recipe-details-selling-unit-list-section-new-header-CUPBOARD",
												"size": {
													"crossAxis": "12g",
													"mainAxis": 50
												},
												"pml": {
													"pmlVersion": "0.1.0",
													"images": {},
													"component": {
														"axis": "HORIZONTAL",
														"alignment": "CENTER",
														"distribution": "SPACE_BETWEEN",
														"padding": {
															"top": 8,
															"bottom": 8,
															"right": 8,
															"left": 8
														},
														"height": "100%",
														"width": "100%",
														"type": "STACK",
														"children": [{
															"markdown": "Aus der eigenen Küche",
															"textAlignment": "START",
															"textAttributes": {
																"size": 20,
																"weight": "SEMIBOLD",
																"color": "#333333"
															},
															"type": "RICH_TEXT"
														}]
													}
												}
											}, {
												"id": "recipe-details-selling-unit-list__3",
												"layout": {
													"type": "FLOW",
													"axis": "VERTICAL",
													"spacing": {
														"mainAxis": 4,
														"crossAxis": 4
													}
												},
												"size": {
													"crossAxis": "12g"
												},
												"type": "BLOCK",
												"children": [{
													"type": "PML",
													"id": "selling-unit-s1020578-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 110)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 1,
																	"y": 1
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1020578"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1020578",
															"name": "Aquasale Meersalz Mühle",
															"decorators": [],
															"display_price": 249,
															"image_id": "d77897051fe60dce2eb94a21b9f1c1035fa3271d1cbe7fe79c407b5291dabb0c",
															"max_count": 99,
															"unit_quantity": "100g"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "d77897051fe60dce2eb94a21b9f1c1035fa3271d1cbe7fe79c407b5291dabb0c"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020578',\n              \"ingredient_id\": 'b6adaad8-d89a-40a9-bed4-96d1d9806f35',\n              \"ingredient_type\": 'CUPBOARD'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#F0E8DD",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "d77897051fe60dce2eb94a21b9f1c1035fa3271d1cbe7fe79c407b5291dabb0c"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": []
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1020578&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#9F7234)Mühle#(#9F7234)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)Meersalz#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"textAttributes": {
																					"size": 14,
																					"weight": "REGULAR",
																					"color": "#333333"
																				},
																				"numberOfLines": 1,
																				"markdown": "#(#333333)Aquasale#(#333333)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "2.49",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "100g",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€24.90/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1020578",
																"color": "#9F7234",
																"secondaryColor": "#F0E8DD",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#9F7234",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1020578",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020578',\n              \"ingredient_id\": 'b6adaad8-d89a-40a9-bed4-96d1d9806f35',\n              \"ingredient_type\": 'CUPBOARD'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020578',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1020578",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Meersalz Mühle, von Aquasale, zu, 2 € 49 cents, 100g",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1020578&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020578',\n              \"ingredient_id\": 'b6adaad8-d89a-40a9-bed4-96d1d9806f35',\n              \"ingredient_type\": 'CUPBOARD'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020578',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Meersalz Mühle, von Aquasale",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1020578',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1020578\",\"sellingUnitPrice\":249,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}, {
													"type": "PML",
													"id": "selling-unit-s1052909-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 110)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 2,
																	"y": 1
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1052909"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1052909",
															"name": "Ostmann Pfefferkörner schwarz",
															"decorators": [],
															"display_price": 239,
															"image_id": "952dec49ba20f404db2f1f0d706f2dcd89fb76d1aad32d4157273c9dba1c7369",
															"max_count": 99,
															"unit_quantity": "50g"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "952dec49ba20f404db2f1f0d706f2dcd89fb76d1aad32d4157273c9dba1c7369"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1052909',\n              \"ingredient_id\": '93296dfe-e934-4795-b2bb-f292679dc0d9',\n              \"ingredient_type\": 'CUPBOARD'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#F0E8DD",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "952dec49ba20f404db2f1f0d706f2dcd89fb76d1aad32d4157273c9dba1c7369"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": [{
																							"absolutePosition": {
																								"top": 8,
																								"right": 8
																							},
																							"type": "CONTAINER",
																							"child": {
																								"axis": "HORIZONTAL",
																								"spacing": 10,
																								"type": "STACK",
																								"children": [{
																									"onPress": {
																										"actionType": "OPEN",
																										"target": "app.picnic://store/page;id=product-details-page-root,id=s1052909&show_category_action=true&show_remove_from_purchases_page_action=false"
																									},
																									"activeOpacity": 0.8,
																									"hitSlop": {
																										"horizontal": 22,
																										"vertical": 22
																									},
																									"type": "TOUCHABLE",
																									"child": {
																										"backgroundColor": "rgba(159, 114, 52, 0.15)",
																										"borderRadius": 4,
																										"height": 22,
																										"padding": {
																											"left": 6,
																											"right": 4
																										},
																										"type": "CONTAINER",
																										"child": {
																											"axis": "HORIZONTAL",
																											"height": "100%",
																											"spacing": 4,
																											"alignment": "CENTER",
																											"type": "STACK",
																											"children": [{
																												"iconKey": "percentage",
																												"fallback": {
																													"id": "picnic-page/bc8d8c0af03f076bd02cf8860ee7ef5643b3f5b9c5b9bfb5831e40a7cd3fa728"
																												},
																												"color": "rgba(159, 114, 52, 1)",
																												"width": 14,
																												"height": 14,
																												"type": "ICON"
																											}, {
																												"iconKey": "rightChevron",
																												"color": "rgba(159, 114, 52, 1)",
																												"width": 5,
																												"height": 9,
																												"type": "ICON"
																											}]
																										}
																									}
																								}]
																							}
																						}]
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1052909&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#9F7234)Schwarz#(#9F7234)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)Pfefferkörner#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"textAttributes": {
																					"size": 14,
																					"weight": "REGULAR",
																					"color": "#333333"
																				},
																				"numberOfLines": 1,
																				"markdown": "#(#333333)Ostmann#(#333333)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "2.39",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "50g",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€47.80/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1052909",
																"color": "#9F7234",
																"secondaryColor": "#F0E8DD",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#9F7234",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1052909",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1052909',\n              \"ingredient_id\": '93296dfe-e934-4795-b2bb-f292679dc0d9',\n              \"ingredient_type\": 'CUPBOARD'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1052909',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1052909",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Pfefferkörner schwarz, von Ostmann, zu, 2 € 39 cents, 50g",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen, zwei Mal tippen mit zwei Fingern, um zum Bündelbonus zu gelangen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1052909&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1052909',\n              \"ingredient_id\": '93296dfe-e934-4795-b2bb-f292679dc0d9',\n              \"ingredient_type\": 'CUPBOARD'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1052909',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "magicTap",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1052909"
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Pfefferkörner schwarz, von Ostmann",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1052909',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1052909\",\"sellingUnitPrice\":239,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}, {
													"type": "PML",
													"id": "selling-unit-s1146641-tile",
													"size": {
														"crossAxis": "(SCREEN_WIDTH - 16 - 4 ) / 2",
														"mainAxis": "(((SCREEN_WIDTH - 16 - 4 ) / 2) + 127)"
													},
													"analytics": {
														"contexts": [{
															"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
															"data": {
																"type": "page_tile",
																"position": {
																	"x": 1,
																	"y": 2
																}
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/product/jsonschema/1-0-0",
															"data": {
																"product_id": "s1146641"
															}
														}, {
															"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
															"data": {
																"recipe_id": "664375b30daa4456de253728",
																"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
															}
														}]
													},
													"content": {
														"type": "SELLING_UNIT_TILE",
														"sellingUnit": {
															"id": "s1146641",
															"name": "Edeka Bio Bio Demeter Zwiebeln rot",
															"decorators": [],
															"display_price": 199,
															"image_id": "0f9716acbc969bae83695b57f2a942b56ab3d1045a9c0dfd56f6902fe5a65445",
															"max_count": 50,
															"unit_quantity": "300g Netz"
														},
														"sellingUnitImageConfiguration": {
															"derivativeType": "padded",
															"extension": "webp",
															"id": "0f9716acbc969bae83695b57f2a942b56ab3d1045a9c0dfd56f6902fe5a65445"
														}
													},
													"viewComponentType": "REGULAR_SELLING_UNIT_TILE",
													"pml": {
														"pmlVersion": "0.1.0",
														"images": {},
														"component": {
															"axis": "VERTICAL",
															"distribution": "START",
															"alignment": "END",
															"backgroundColor": "#ffffff",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"accessible": true,
																"hideFromAccessibility": true,
																"width": "100%",
																"aspectRatio": 1,
																"type": "CONTAINER",
																"child": {
																	"onPress": {
																		"actionType": "CALLBACK",
																		"callback": {
																			"type": "EXPRESSION",
																			"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1146641',\n              \"ingredient_id\": 'dbb40e6d-3323-4475-8936-3f5ea3a42e4e',\n              \"ingredient_type\": 'CUPBOARD'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																		}
																	},
																	"activeOpacity": 1,
																	"activeColor": "rgba(0, 0, 0, 0.1)",
																	"activeScale": 0.98,
																	"borderRadius": 12,
																	"backgroundColor": "#E7ECD7",
																	"type": "TOUCHABLE",
																	"child": {
																		"width": "100%",
																		"height": "100%",
																		"overflow": "hidden",
																		"type": "CONTAINER",
																		"child": {
																			"axis": "VERTICAL",
																			"height": "100%",
																			"type": "STACK",
																			"children": [{
																				"source": {
																					"id": "picnic-page/4242c4252bd2a18a899478427239b03fa5b73c50dcbabd98fe8227497835e891"
																				},
																				"extension": "webp",
																				"width": "100%",
																				"height": "100%",
																				"resizeMode": "COVER",
																				"placeholder": "NONE",
																				"type": "IMAGE"
																			}, {
																				"absolutePosition": {
																					"top": 0,
																					"bottom": 0,
																					"left": 0,
																					"right": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-image",
																					"type": "REFERENCE_CONTAINER",
																					"child": {
																						"source": {
																							"id": "0f9716acbc969bae83695b57f2a942b56ab3d1045a9c0dfd56f6902fe5a65445"
																						},
																						"derivativeType": "padded",
																						"extension": "webp",
																						"placeholder": {
																							"resizeMode": "CONTAIN",
																							"icon": "loadingCarrotTranslucentPadding"
																						},
																						"resizeMode": "CONTAIN",
																						"type": "IMAGE"
																					}
																				}
																			}, {
																				"hideFromAccessibility": true,
																				"height": "100%",
																				"width": "100%",
																				"absolutePosition": {
																					"left": 0,
																					"top": 0,
																					"right": 0,
																					"bottom": 0
																				},
																				"type": "CONTAINER",
																				"child": {
																					"id": "selling-unit-label-container",
																					"presets": {
																						"EXPANDED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"EXPANDED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_VISIBLE": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 1,
																								"duration": 150
																							}
																						},
																						"COLLAPSED_HIDDEN": {
																							"marginBottom": {
																								"type": "TIMING",
																								"toValue": 36,
																								"duration": 150
																							},
																							"opacity": {
																								"type": "TIMING",
																								"toValue": 0,
																								"duration": 150
																							}
																						}
																					},
																					"type": "ANIMATION_CONTAINER",
																					"child": {
																						"height": "100%",
																						"width": "100%",
																						"axis": "VERTICAL",
																						"type": "STACK",
																						"children": [{
																							"absolutePosition": {
																								"left": 8,
																								"top": 8
																							},
																							"type": "CONTAINER",
																							"child": {
																								"axis": "HORIZONTAL",
																								"spacing": 10,
																								"type": "STACK",
																								"children": []
																							}
																						}]
																					}
																				}
																			}]
																		}
																	}
																}
															}, {
																"overflow": "hidden",
																"accessible": true,
																"hideFromAccessibility": true,
																"borderRadius": 12,
																"width": "100%",
																"type": "CONTAINER",
																"child": {
																	"activeColor": "rgba(0, 0, 0, 0.05)",
																	"onPress": {
																		"actionType": "OPEN",
																		"target": "app.picnic://store/page;id=product-details-page-root,id=s1146641&show_category_action=true&show_remove_from_purchases_page_action=false"
																	},
																	"type": "TOUCHABLE",
																	"child": {
																		"axis": "VERTICAL",
																		"distribution": "START",
																		"alignment": "START",
																		"spacing": 2,
																		"padding": {
																			"top": 8,
																			"bottom": 8,
																			"left": 8,
																			"right": 8
																		},
																		"type": "STACK",
																		"children": [{
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"markdown": "#(#7C9326)Demeter#(#7C9326)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"numberOfLines": 2,
																			"type": "RICH_TEXT",
																			"children": [{
																				"markdown": "#(#333333)#(#628003)**Bio**#(#628003) Zwiebeln rot#(#333333) ",
																				"textAttributes": {
																					"size": 16,
																					"weight": "MEDIUM",
																					"color": "#333333"
																				},
																				"type": "RICH_TEXT"
																			}, {
																				"textAttributes": {
																					"size": 12,
																					"weight": "REGULAR",
																					"color": "#333333",
																					"family": "PicnicSymbols"
																				},
																				"markdown": ">",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"width": "100%",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"textAttributes": {
																					"size": 14,
																					"weight": "REGULAR",
																					"color": "#333333"
																				},
																				"numberOfLines": 1,
																				"markdown": "#(#333333)Edeka Bio#(#333333)",
																				"type": "RICH_TEXT"
																			}]
																		}, {
																			"type": "CONTAINER",
																			"child": {
																				"axis": "HORIZONTAL",
																				"distribution": "START",
																				"alignment": "CENTER",
																				"spacing": 4,
																				"type": "STACK",
																				"children": [{
																					"axis": "HORIZONTAL",
																					"alignment": "CENTER",
																					"type": "STACK",
																					"children": [{
																						"textAlignment": "END",
																						"textAttributes": {
																							"size": 14,
																							"weight": "BOLD",
																							"color": "#333333"
																						},
																						"markdown": "1.99",
																						"type": "RICH_TEXT"
																					}]
																				}]
																			}
																		}, {
																			"axis": "HORIZONTAL",
																			"distribution": "START",
																			"alignment": "CENTER",
																			"spacing": 4,
																			"type": "STACK",
																			"children": [{
																				"numberOfLines": 1,
																				"flexShrink": 0,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "300g Netz",
																				"type": "RICH_TEXT"
																			}, {
																				"height": 3,
																				"aspectRatio": 1,
																				"iconKey": "dotDivider",
																				"color": "#5b534e",
																				"type": "ICON"
																			}, {
																				"numberOfLines": 1,
																				"flexShrink": 1,
																				"textAttributes": {
																					"size": 12,
																					"weight": "MEDIUM",
																					"color": "#5b534e"
																				},
																				"markdown": "€6.63/kg",
																				"type": "RICH_TEXT"
																			}]
																		}]
																	}
																}
															}, {
																"presentationStyle": "SELLING_UNIT_REGULAR_TILE",
																"sellingUnitId": "s1146641",
																"color": "#7C9326",
																"secondaryColor": "#E7ECD7",
																"type": "UNAVAILABILITY_CONTAINER"
															}, {
																"absolutePosition": {
																	"left": 0,
																	"top": 0,
																	"right": 0,
																	"bottom": 0
																},
																"pointerEvents": "box-none",
																"type": "CONTAINER",
																"child": {
																	"width": "100%",
																	"pointerEvents": "box-none",
																	"aspectRatio": 1,
																	"type": "CONTAINER",
																	"child": {
																		"absolutePosition": {
																			"bottom": 8,
																			"right": 8,
																			"left": 8
																		},
																		"type": "CONTAINER",
																		"child": {
																			"textType": null,
																			"borderRadius": null,
																			"color": "#7C9326",
																			"showCollapsed": false,
																			"showCollapsedRemoveButton": true,
																			"sellingUnitId": "s1146641",
																			"onIncrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1146641',\n              \"ingredient_id\": 'dbb40e6d-3323-4475-8936-3f5ea3a42e4e',\n              \"ingredient_type\": 'CUPBOARD'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"onDecrementPress": {
																				"actionType": "CALLBACK",
																				"callback": {
																					"type": "EXPRESSION",
																					"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1146641',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																				}
																			},
																			"type": "STEPPER"
																		}
																	}
																}
															}, {
																"contentType": "SELLING_UNIT",
																"sellingUnitId": "s1146641",
																"availableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Bio Demeter Zwiebeln rot, von Edeka Bio, zu, 1 € 99 cents, 300g Netz",
																	"accessibilityHint": "zwei Mal tippen für mehr Informationen",
																	"accessibilityActions": [{
																		"name": "activate",
																		"onAction": {
																			"actionType": "OPEN",
																			"target": "app.picnic://store/page;id=product-details-page-root,id=s1146641&show_category_action=true&show_remove_from_purchases_page_action=false"
																		}
																	}, {
																		"name": "increment",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/assign-selling-unit-to-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1146641',\n              \"ingredient_id\": 'dbb40e6d-3323-4475-8936-3f5ea3a42e4e',\n              \"ingredient_type\": 'CUPBOARD'\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n            RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n            RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n            const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  segmentType,\n  segmentName\n) => {\n  const contexts = [\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n      data: {\n        recipe_id: recipeId,\n        day_relative_to_slot: Number(dayRelativeToSlot),\n        portions: portions\n      }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(segmentType && segmentName) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/segment/jsonschema/1-0-0',\n      data: {\n        segment_type: segmentType,\n        segment_name: segmentName\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n\n  return contexts;\n}\n            const analyticsContexts = getMealsUnavailabilityAnalytics(\n              '664375b30daa4456de253728',\n              undefined,\n              undefined,\n              resp.dayRelativeToSlot,\n              resp.numberOfServings,\n              'RDP'\n            );\n            onPMLAction(\n              {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n              analyticsContexts\n            );\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {\n            RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n          }\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1146641',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"unavailableAccessibility": {
																	"accessible": true,
																	"accessibilityRole": "adjustable",
																	"accessibilityLabel": "Bio Demeter Zwiebeln rot, von Edeka Bio",
																	"accessibilityHint": "tippe zwei Mal, um eine Alternative anzuzeigen",
																	"accessibilityActions": [{
																		"name": "activate"
																	}, {
																		"name": "decrement",
																		"onAction": {
																			"actionType": "CALLBACK",
																			"callback": {
																				"type": "EXPRESSION",
																				"expression": "() => {\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        onPMLAction({\n    actionType: \"CALLBACK\",\n    callback: () => {\n      const operationId = Math.floor(Math.random() * 100000);\n      onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"REMOVE\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n      onPMLAction({\n        actionType: \"ENDPOINT\",\n        method: \"post\",\n        url: 'pages/task/remove-selling-unit-from-day',\n        body: {\n            \"payload\": {\n              \"recipe_id\": '664375b30daa4456de253728',\n              \"selling_unit_id\": 's1146641',\n              \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n            }\n          },\n        onSuccess: {\n            actionType: \"CALLBACK\",\n            callback: (resp) => {\n              \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: operationId,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n              return resp\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (resp) => {\n              if (resp.isLastSellingUnitRemoved) {\n                RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n              }\n          }\n            }\n        },\n        onError: {\n            actionType: \"CALLBACK\",\n            callback: (err) => {\n              onPMLAction({\n    actionType: \"MODIFY_CART\",\n    operations: [{\"type\":\"ADD\",\"sellingUnitId\":\"s1146641\",\"sellingUnitPrice\":199,\"quantity\":1}],\n    operationId: operationId\n  });\n              return err;\n            },\n            onNext: {\n              actionType: \"CALLBACK\",\n              callback: (errorResponse) => {}\n            }\n        }\n      });\n    }\n  }\n    );\n      }"
																			}
																		}
																	}]
																},
																"type": "ACCESSIBILITY_CONTAINER"
															}]
														}
													}
												}]
											}]
										}]
									}]
								}, {
									"id": "recipe-content-tabs-list-instructions",
									"size": {
										"crossAxis": "12g"
									},
									"layout": {
										"type": "FLOW",
										"axis": "VERTICAL"
									},
									"analytics": {
										"contexts": [{
											"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
											"data": {
												"recipe_id": "664375b30daa4456de253728",
												"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
											}
										}]
									},
									"isHidden": {
										"type": "EXPRESSION",
										"expression": "RecipeDetailsPageState.focusedTabIdState !== 'instructions'"
									},
									"type": "BLOCK",
									"children": [{
										"type": "PML",
										"id": "recipe-details-instructions-section",
										"size": {
											"crossAxis": "12g"
										},
										"analytics": {
											"contexts": [{
												"schema": "iglu:tech.picnic.snowplow.analytics/page_component/jsonschema/1-1-0",
												"data": {
													"type": "pml"
												}
											}, {
												"schema": "iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0",
												"data": {
													"template_id": "recipe-details-instructions-section"
												}
											}, {
												"schema": "iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0",
												"data": {
													"recipe_id": "664375b30daa4456de253728",
													"products": ["s1023297", "s1020276", "s1029546", "s1032352", "s1027982", "s1060088", "s1021966", "s1060062", "s1029170", "s1087083", "s1025987", "s1020578", "s1052909", "s1146641"]
												}
											}]
										},
										"pml": {
											"pmlVersion": "0.1.0",
											"images": {},
											"component": {
												"axis": "VERTICAL",
												"alignment": "FILL",
												"backgroundColor": "#fcfaf9",
												"padding": {
													"top": 24,
													"bottom": 0,
													"right": 16,
													"left": 16
												},
												"spacing": 12,
												"type": "STACK",
												"children": [{
													"textAlignment": "START",
													"textAttributes": {
														"size": 20,
														"weight": "SEMIBOLD",
														"color": "#333333"
													},
													"markdown": "So wird's gemacht (6 Portionen)",
													"type": "RICH_TEXT"
												}, {
													"axis": "VERTICAL",
													"alignment": "FILL",
													"spacing": 24,
													"type": "STACK",
													"children": [{
														"axis": "HORIZONTAL",
														"spacing": 16,
														"type": "STACK",
														"children": [{
															"width": 28,
															"type": "CONTAINER",
															"child": {
																"textAttributes": {
																	"size": 28,
																	"weight": "SEMIBOLD",
																	"color": "#295813"
																},
																"textAlignment": "CENTER",
																"markdown": "1",
																"numberOfLines": 1,
																"type": "RICH_TEXT"
															}
														}, {
															"textAttributes": {
																"size": 16,
																"weight": "REGULAR",
																"color": "#333333"
															},
															"textAlignment": "START",
															"markdown": "Den Backofen auf 200 °C Ober- und Unterhitze (180 °C Umluft) vorheizen.",
															"type": "RICH_TEXT"
														}]
													}, {
														"axis": "HORIZONTAL",
														"spacing": 16,
														"type": "STACK",
														"children": [{
															"width": 28,
															"type": "CONTAINER",
															"child": {
																"textAttributes": {
																	"size": 28,
																	"weight": "SEMIBOLD",
																	"color": "#295813"
																},
																"textAlignment": "CENTER",
																"markdown": "2",
																"numberOfLines": 1,
																"type": "RICH_TEXT"
															}
														}, {
															"textAttributes": {
																"size": 16,
																"weight": "REGULAR",
																"color": "#333333"
															},
															"textAlignment": "START",
															"markdown": "Für den vegetarischen Pizza-Belag zunächst **1 Dose Mais** abtropfen lassen. **150 g Kirschtomaten** und **1 Paprika** waschen, die Tomaten vierteln und die Paprika in Würfel schneiden. **1 rote Zwiebel** schälen und in kleine Würfel schneiden. **150 g Champignons** putzen und in Scheiben schneiden.",
															"type": "RICH_TEXT"
														}]
													}, {
														"axis": "HORIZONTAL",
														"spacing": 16,
														"type": "STACK",
														"children": [{
															"width": 28,
															"type": "CONTAINER",
															"child": {
																"textAttributes": {
																	"size": 28,
																	"weight": "SEMIBOLD",
																	"color": "#295813"
																},
																"textAlignment": "CENTER",
																"markdown": "3",
																"numberOfLines": 1,
																"type": "RICH_TEXT"
															}
														}, {
															"textAttributes": {
																"size": 16,
																"weight": "REGULAR",
																"color": "#333333"
															},
															"textAlignment": "START",
															"markdown": "Das Gemüse in einer großen Schüssel mit **150 g Reibekäse**, **1 EL italienischer Kräuter**, **200 g Sahne**, **200 g Schmand** und einer Prise **Salz** und **Pfeffer** vermengen.",
															"type": "RICH_TEXT"
														}]
													}, {
														"axis": "HORIZONTAL",
														"spacing": 16,
														"type": "STACK",
														"children": [{
															"width": 28,
															"type": "CONTAINER",
															"child": {
																"textAttributes": {
																	"size": 28,
																	"weight": "SEMIBOLD",
																	"color": "#295813"
																},
																"textAlignment": "CENTER",
																"markdown": "4",
																"numberOfLines": 1,
																"type": "RICH_TEXT"
															}
														}, {
															"textAttributes": {
																"size": 16,
																"weight": "REGULAR",
																"color": "#333333"
															},
															"textAlignment": "START",
															"markdown": "**8 Aufbackbrötchen** halbieren und die Gemüsemischung gleichmäßig darauf verteilen. Die Pizzabrötchen für 15-20 Min. auf der mittleren Schiene backen. Mit frischem Basilikum garnieren.",
															"type": "RICH_TEXT"
														}]
													}, {
														"axis": "HORIZONTAL",
														"spacing": 16,
														"type": "STACK",
														"children": [{
															"width": 28,
															"type": "CONTAINER",
															"child": {
																"textAttributes": {
																	"size": 16,
																	"weight": "SEMIBOLD",
																	"color": "#295813"
																},
																"textAlignment": "CENTER",
																"markdown": "Tipp",
																"numberOfLines": 1,
																"type": "RICH_TEXT"
															}
														}, {
															"textAttributes": {
																"size": 16,
																"weight": "REGULAR",
																"color": "#333333"
															},
															"textAlignment": "START",
															"markdown": "Das Gemüse kann nach Belieben varriiert werden. Wie wäre noch etwas Zucchiniwürfel dazu?",
															"type": "RICH_TEXT"
														}]
													}]
												}, {
													"extension": "webp",
													"source": {
														"id": "picnic-page/059cb2b26f144fdd51fbf5dc06b22f8ab76eef90b19c44420af9e1fab5c22a5b"
													},
													"width": "100%",
													"resizeMode": "CONTAIN",
													"aspectRatio": 2.128,
													"type": "IMAGE"
												}]
											}
										}
									}]
								}]
							}
						},
						"type": "SUSPENSE",
						"pageConfig": {
							"id": "recipe-portioning-content",
							"parameters": {
								"recipe_id": "664375b30daa4456de253728"
							}
						},
						"loadingConfig": null,
						"errorConfig": null
					}]
				}, {
					"id": "recipe-details-stepper-wrapper",
					"suspenseId": "recipe-details-stepper-suspense-id-664375b30daa4456de253728",
					"child": {
						"id": "RecipeDetailsStepperState",
						"state": {
							"dayOffsetState": null,
							"recipeBasketState": "AVAILABLE",
							"unavailableIngredientInBasketState": false
						},
						"type": "STATE_BOUNDARY",
						"child": {
							"type": "PML",
							"id": "rdp-stepper",
							"size": {
								"crossAxis": "12g",
								"mainAxis": 1
							},
							"onPageFocus": {
								"actionType": "RELOAD",
								"suspenseId": "recipe-details-stepper-suspense-id-664375b30daa4456de253728"
							},
							"pml": {
								"pmlVersion": "0.1.0",
								"images": {},
								"component": {
									"axis": "VERTICAL",
									"type": "STACK",
									"children": [{
										"height": 10,
										"width": "100%",
										"type": "CONTAINER",
										"child": null
									}, {
										"height": 1,
										"width": "100%",
										"backgroundColor": "#f8f5f2",
										"absolutePosition": {
											"bottom": 54
										},
										"type": "CONTAINER",
										"child": null
									}, {
										"height": 54,
										"width": "100%",
										"absolutePosition": {
											"bottom": 0
										},
										"backgroundColor": "#ffffff",
										"padding": {
											"top": 8,
											"bottom": 8,
											"left": 12,
											"right": 12
										},
										"type": "CONTAINER",
										"child": {
											"spacing": 8,
											"alignContent": "CENTER",
											"alignment": "CENTER",
											"axis": "HORIZONTAL",
											"accessible": true,
											"accessibilityRole": "adjustable",
											"accessibilityLabel": {
												"type": "EXPRESSION",
												"expression": "(() => {\n  if (RecipeDetailsStepperState.recipeBasketState === 'ADDED') { \n    if (RecipeDetailsPageState.servingsState <= 1) {\n      return `${RecipeDetailsPageState.servingsState} portionen, zum Anpassen nach oben oder unten streichen, zum Ändern des Tages zweimal tippen`;\n    } else {\n      return `${RecipeDetailsPageState.servingsState} portionen, zum Anpassen nach oben oder unten streichen, zum Hinzufügen eines Rezepts zweimal tippen`;\n    }\n  } else if (RecipeDetailsStepperState.recipeBasketState === 'AVAILABLE') {\n    return `${RecipeDetailsPageState.servingsState} portionen, zum Anpassen nach oben oder unten streichen, zum Hinzufügen eines Rezepts zweimal tippen`;\n  } else {\n    return 'rezept zurzeit nicht lieferbar';\n  }\n})();"
											},
											"accessibilityActions": [{
												"name": "activate",
												"onAction": {
													"actionType": "CALLBACK",
													"callback": {
														"type": "EXPRESSION",
														"expression": "() => {\n          const isRecipeAlreadyInBasket = RecipeDetailsStepperState.recipeBasketState === 'ADDED';\n          \n          if (isRecipeAlreadyInBasket) { \n            onPMLAction({\n              \"actionType\": 'OPEN',\n              \"target\": `app.picnic://store/page;id=meals-planner-day-bottom-sheet,presentation-mode=MODAL_OVER_CONTEXT,type=STATIC&recipeId=664375b30daa4456de253728&start_date=2025-01-11T01%3A00%3A00.000&origin=rdp&portions=${RecipeDetailsPageState.servingsState}&day_offset=${RecipeDetailsStepperState.dayOffsetState}`\n            }) \n          } else {\n            RecipeDetailsPageState.basketModificationOngoingState = true;\n              onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n            onPMLAction({\n              \"actionType\": \"ENDPOINT\",\n              \"method\": \"post\",\n              \"url\": 'pages/task/assign-recipe-to-day',\n              \"body\": {\n                \"payload\": {\n                  \"recipe_id\": '664375b30daa4456de253728',\n                  \"portions\": RecipeDetailsPageState.servingsState,\n                  \"day_offset\": RecipeDetailsStepperState.dayOffsetState,\n                  \"core_ingredients\": RecipePortioningContentState.coreIngredientsState\n                }\n              },\n              \"onSuccess\": {\n                \"actionType\": \"CALLBACK\",\n                \"callback\": (resp) => {\n                  \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: undefined,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n                  RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n                  RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n                  RecipeDetailsPageState.basketModificationOngoingState = false;\n                  RecipeDetailsStepperState.unavailableIngredientInBasketState = resp.anyUnavailableIngredient;\n                  const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  group_type,\n  maturity_segment\n) => {\n  const contexts = [\n    {\n        schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n        data: {\n          recipe_id: recipeId,\n          day_relative_to_slot: Number(dayRelativeToSlot),\n          portions: portions\n        }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(group_type && maturity_segment) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/meals_customer_segment/jsonschema/1-0-0',\n      data: {\n        group_type: group_type,\n        maturity_segment: maturity_segment\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n  return contexts;\n}\n                  const analyticsContexts = getMealsUnavailabilityAnalytics(\n                    '664375b30daa4456de253728',\n                    resp.anyUnavailableIngredient,\n                    resp.unAvailableIngredients,\n                    RecipeDetailsStepperState.dayOffsetState,\n                    RecipeDetailsPageState.servingsState,\n                    'RDP'\n                  )\n                  onPMLAction(\n                    {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n                    analyticsContexts\n                  );\n                }\n              },\n              \"onError\": {\n                \"actionType\": \"CALLBACK\",\n                \"callback\": () => {\n                  RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n                  RecipeDetailsPageState.basketModificationOngoingState = false;\n                  onPMLAction({\n                    \"actionType\": \"EVENT\",\n                    \"action\": {\n                      \"type\": \"TOAST\",\n                      \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                    }\n                  })\n                }\n              }\n            })\n          }\n        }"
													}
												}
											}, {
												"name": "increment",
												"onAction": {
													"actionType": "CALLBACK",
													"callback": {
														"type": "EXPRESSION",
														"expression": "() => {\n        if (GlobalState.debounceTimer) {\n          clearTimeout(GlobalState.debounceTimer);\n        }\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        \n        const isRecipeAlreadyInBasket = RecipeDetailsStepperState.recipeBasketState === 'ADDED';\n        const shouldRemoveRecipeFromBasket = ((false && RecipeDetailsPageState.servingsState - 1 < 1));\n        const oldServingSize = RecipeDetailsPageState.servingsState;\n        const newServingSize = true\n          ? RecipeDetailsPageState.servingsState >= 24 \n            ? 24 \n            : RecipeDetailsPageState.servingsState + 1\n          : RecipeDetailsPageState.servingsState <= 1 \n            ? 1 \n            : RecipeDetailsPageState.servingsState - 1;\n            \n        if (newServingSize !== oldServingSize) {\n          RecipeDetailsPageState.servingsState = newServingSize;\n        }\n            \n        GlobalState.debounceTimer = setTimeout(() => {\n          GlobalState.debounceTimer = 0;\n          RecipePortioningContentState.reloadOngoingState = true;\n          onPMLAction({\n            \"actionType\": \"RELOAD\",\n            \"suspenseId\": \"recipe-portioning-content-suspense-id-664375b30daa4456de253728\",\n            \"pageConfig\": {\n              \"id\": \"recipe-portioning-content\",\n              \"parameters\": { \"recipe_id\": '664375b30daa4456de253728', \"servings\": newServingSize }\n            },\n            \"onError\": {\n              \"actionType\": \"CALLBACK\",\n              \"callback\": () => {\n                RecipeDetailsPageState.servingsState = oldServingSize;\n                RecipePortioningContentState.reloadOngoingState = false;\n                onPMLAction({\n                  \"actionType\": \"EVENT\",\n                  \"action\": {\n                    \"type\": \"TOAST\",\n                    \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                  }\n                });\n              }\n            }\n          });\n  \n          if (isRecipeAlreadyInBasket) {\n            RecipeDetailsPageState.basketModificationOngoingState = true;\n            if (shouldRemoveRecipeFromBasket) { \n              onPMLAction({\n                \"actionType\": \"ENDPOINT\",\n                \"method\": \"post\",\n                \"url\": 'pages/task/remove-recipe-from-day',\n                \"body\": {\n                  \"payload\": {\n                    \"recipe_id\": '664375b30daa4456de253728',\n                    \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n                  }\n                },\n                \"onSuccess\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": (resp) => {\n                    \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: undefined,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n                    RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    RecipeDetailsStepperState.unavailableIngredientInBasketState = false;\n                    const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  group_type,\n  maturity_segment\n) => {\n  const contexts = [\n    {\n        schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n        data: {\n          recipe_id: recipeId,\n          day_relative_to_slot: Number(dayRelativeToSlot),\n          portions: portions\n        }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(group_type && maturity_segment) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/meals_customer_segment/jsonschema/1-0-0',\n      data: {\n        group_type: group_type,\n        maturity_segment: maturity_segment\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n  return contexts;\n}\n                    const analyticsContexts = getMealsUnavailabilityAnalytics(\n                      '664375b30daa4456de253728',\n                      undefined,\n                      undefined,\n                      RecipeDetailsStepperState.dayOffsetState,\n                      0,\n                      'RDP',\n                      'ADD'\n                    )\n                    onPMLAction(\n                      {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n                      analyticsContexts\n                    );\n                  }\n                },\n                \"onError\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": () => {\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    onPMLAction({\n                      \"actionType\": \"EVENT\",\n                      \"action\": {\n                        \"type\": \"TOAST\",\n                        \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                      }\n                    });\n                  }\n                }\n              })\n            } else {\n              onPMLAction({\n                \"actionType\": \"ENDPOINT\",\n                \"method\": \"post\",\n                \"url\": 'pages/task/update-number-of-portions-task',\n                \"body\": {\n                  \"payload\": {\n                    \"recipe_id\": '664375b30daa4456de253728',\n                    \"day_offset\": RecipeDetailsStepperState.dayOffsetState,\n                    \"portions\": newServingSize\n                  }\n                },\n                \"onSuccess\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": (resp) => {\n                    \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: undefined,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    RecipeDetailsStepperState.unavailableIngredientInBasketState  = resp.anyUnavailableIngredient;\n                    const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  group_type,\n  maturity_segment\n) => {\n  const contexts = [\n    {\n        schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n        data: {\n          recipe_id: recipeId,\n          day_relative_to_slot: Number(dayRelativeToSlot),\n          portions: portions\n        }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(group_type && maturity_segment) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/meals_customer_segment/jsonschema/1-0-0',\n      data: {\n        group_type: group_type,\n        maturity_segment: maturity_segment\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n  return contexts;\n}\n                    const analyticsContexts = getMealsUnavailabilityAnalytics(\n                      '664375b30daa4456de253728',\n                      resp.anyUnavailableIngredient,\n                      resp.unAvailableIngredients,\n                      RecipeDetailsStepperState.dayOffsetState,\n                      newServingSize,\n                      'RDP',\n                      'ADD'\n                    )\n                    onPMLAction(\n                      {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n                      analyticsContexts\n                    );\n                  }\n                },\n                \"onError\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": () => {\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    onPMLAction({\n                      \"actionType\": \"EVENT\",\n                      \"action\": {\n                        \"type\": \"TOAST\",\n                        \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                      }\n                    });\n                  }\n                }\n              });\n            }\n          }\n        }, 500);\n      }"
													}
												}
											}, {
												"name": "decrement",
												"onAction": {
													"actionType": "CALLBACK",
													"callback": {
														"type": "EXPRESSION",
														"expression": "() => {\n        if (GlobalState.debounceTimer) {\n          clearTimeout(GlobalState.debounceTimer);\n        }\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        \n        const isRecipeAlreadyInBasket = RecipeDetailsStepperState.recipeBasketState === 'ADDED';\n        const shouldRemoveRecipeFromBasket = ((true && RecipeDetailsPageState.servingsState - 1 < 1));\n        const oldServingSize = RecipeDetailsPageState.servingsState;\n        const newServingSize = false\n          ? RecipeDetailsPageState.servingsState >= 24 \n            ? 24 \n            : RecipeDetailsPageState.servingsState + 1\n          : RecipeDetailsPageState.servingsState <= 1 \n            ? 1 \n            : RecipeDetailsPageState.servingsState - 1;\n            \n        if (newServingSize !== oldServingSize) {\n          RecipeDetailsPageState.servingsState = newServingSize;\n        }\n            \n        GlobalState.debounceTimer = setTimeout(() => {\n          GlobalState.debounceTimer = 0;\n          RecipePortioningContentState.reloadOngoingState = true;\n          onPMLAction({\n            \"actionType\": \"RELOAD\",\n            \"suspenseId\": \"recipe-portioning-content-suspense-id-664375b30daa4456de253728\",\n            \"pageConfig\": {\n              \"id\": \"recipe-portioning-content\",\n              \"parameters\": { \"recipe_id\": '664375b30daa4456de253728', \"servings\": newServingSize }\n            },\n            \"onError\": {\n              \"actionType\": \"CALLBACK\",\n              \"callback\": () => {\n                RecipeDetailsPageState.servingsState = oldServingSize;\n                RecipePortioningContentState.reloadOngoingState = false;\n                onPMLAction({\n                  \"actionType\": \"EVENT\",\n                  \"action\": {\n                    \"type\": \"TOAST\",\n                    \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                  }\n                });\n              }\n            }\n          });\n  \n          if (isRecipeAlreadyInBasket) {\n            RecipeDetailsPageState.basketModificationOngoingState = true;\n            if (shouldRemoveRecipeFromBasket) { \n              onPMLAction({\n                \"actionType\": \"ENDPOINT\",\n                \"method\": \"post\",\n                \"url\": 'pages/task/remove-recipe-from-day',\n                \"body\": {\n                  \"payload\": {\n                    \"recipe_id\": '664375b30daa4456de253728',\n                    \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n                  }\n                },\n                \"onSuccess\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": (resp) => {\n                    \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: undefined,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n                    RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    RecipeDetailsStepperState.unavailableIngredientInBasketState = false;\n                    const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  group_type,\n  maturity_segment\n) => {\n  const contexts = [\n    {\n        schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n        data: {\n          recipe_id: recipeId,\n          day_relative_to_slot: Number(dayRelativeToSlot),\n          portions: portions\n        }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(group_type && maturity_segment) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/meals_customer_segment/jsonschema/1-0-0',\n      data: {\n        group_type: group_type,\n        maturity_segment: maturity_segment\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n  return contexts;\n}\n                    const analyticsContexts = getMealsUnavailabilityAnalytics(\n                      '664375b30daa4456de253728',\n                      undefined,\n                      undefined,\n                      RecipeDetailsStepperState.dayOffsetState,\n                      0,\n                      'RDP',\n                      'REMOVE'\n                    )\n                    onPMLAction(\n                      {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n                      analyticsContexts\n                    );\n                  }\n                },\n                \"onError\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": () => {\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    onPMLAction({\n                      \"actionType\": \"EVENT\",\n                      \"action\": {\n                        \"type\": \"TOAST\",\n                        \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                      }\n                    });\n                  }\n                }\n              })\n            } else {\n              onPMLAction({\n                \"actionType\": \"ENDPOINT\",\n                \"method\": \"post\",\n                \"url\": 'pages/task/update-number-of-portions-task',\n                \"body\": {\n                  \"payload\": {\n                    \"recipe_id\": '664375b30daa4456de253728',\n                    \"day_offset\": RecipeDetailsStepperState.dayOffsetState,\n                    \"portions\": newServingSize\n                  }\n                },\n                \"onSuccess\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": (resp) => {\n                    \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: undefined,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    RecipeDetailsStepperState.unavailableIngredientInBasketState  = resp.anyUnavailableIngredient;\n                    const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  group_type,\n  maturity_segment\n) => {\n  const contexts = [\n    {\n        schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n        data: {\n          recipe_id: recipeId,\n          day_relative_to_slot: Number(dayRelativeToSlot),\n          portions: portions\n        }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(group_type && maturity_segment) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/meals_customer_segment/jsonschema/1-0-0',\n      data: {\n        group_type: group_type,\n        maturity_segment: maturity_segment\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n  return contexts;\n}\n                    const analyticsContexts = getMealsUnavailabilityAnalytics(\n                      '664375b30daa4456de253728',\n                      resp.anyUnavailableIngredient,\n                      resp.unAvailableIngredients,\n                      RecipeDetailsStepperState.dayOffsetState,\n                      newServingSize,\n                      'RDP',\n                      'REMOVE'\n                    )\n                    onPMLAction(\n                      {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n                      analyticsContexts\n                    );\n                  }\n                },\n                \"onError\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": () => {\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    onPMLAction({\n                      \"actionType\": \"EVENT\",\n                      \"action\": {\n                        \"type\": \"TOAST\",\n                        \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                      }\n                    });\n                  }\n                }\n              });\n            }\n          }\n        }, 500);\n      }"
													}
												}
											}],
											"type": "STACK",
											"children": [{
												"width": {
													"type": "EXPRESSION",
													"expression": "(CONTAINER_WIDTH / 2) - 8"
												},
												"axis": "HORIZONTAL",
												"alignment": "CENTER",
												"accessible": false,
												"hideFromAccessibility": true,
												"type": "STACK",
												"children": [{
													"axis": "HORIZONTAL",
													"distribution": "CENTER",
													"width": "25%",
													"type": "STACK",
													"children": [{
														"width": 24,
														"height": null,
														"opacity": {
															"type": "EXPRESSION",
															"expression": "((RecipeDetailsStepperState.recipeBasketState === 'ORDERED') || (RecipePortioningContentState.reloadOngoingState || RecipeDetailsPageState.basketModificationOngoingState)) ? 0.5 : 1"
														},
														"accessible": false,
														"hideFromAccessibility": true,
														"type": "CONTAINER",
														"child": {
															"axis": "VERTICAL",
															"alignment": "CENTER",
															"distribution": "CENTER",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"iconKey": "minus",
																"width": 16,
																"height": 16,
																"color": "#333333",
																"type": "ICON"
															}]
														}
													}]
												}, {
													"width": "50%",
													"type": "CONTAINER",
													"child": {
														"numberOfLines": 1,
														"textAlignment": "CENTER",
														"type": "RICH_TEXT",
														"children": [{
															"markdown": {
																"type": "EXPRESSION",
																"expression": "RecipeDetailsPageState.servingsState.toString()"
															},
															"textAttributes": {
																"size": 14,
																"weight": "MEDIUM",
																"color": "#333333"
															},
															"type": "RICH_TEXT",
															"children": [{
																"markdown": {
																	"type": "EXPRESSION",
																	"expression": "RecipeDetailsPageState.servingsState > 1 ? ' Portionen' : ' Portion'"
																},
																"textAttributes": {
																	"size": 14,
																	"weight": "MEDIUM",
																	"color": "#333333"
																},
																"type": "RICH_TEXT"
															}]
														}]
													}
												}, {
													"axis": "HORIZONTAL",
													"distribution": "CENTER",
													"width": "25%",
													"type": "STACK",
													"children": [{
														"width": 24,
														"height": null,
														"opacity": {
															"type": "EXPRESSION",
															"expression": "(((RecipeDetailsStepperState.recipeBasketState === 'ORDERED') || (RecipePortioningContentState.reloadOngoingState || RecipeDetailsPageState.basketModificationOngoingState)) || (RecipeDetailsStepperState.unavailableIngredientInBasketState)) ? 0.5 : 1"
														},
														"accessible": false,
														"hideFromAccessibility": true,
														"type": "CONTAINER",
														"child": {
															"axis": "VERTICAL",
															"alignment": "CENTER",
															"distribution": "CENTER",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"iconKey": "plus",
																"width": 16,
																"height": 16,
																"color": "#333333",
																"type": "ICON"
															}]
														}
													}]
												}]
											}, {
												"absolutePosition": {
													"top": 0,
													"bottom": 0,
													"left": -8,
													"right": -8
												},
												"type": "CONTAINER",
												"child": {
													"width": {
														"type": "EXPRESSION",
														"expression": "(CONTAINER_WIDTH / 2) - 8"
													},
													"type": "CONTAINER",
													"child": {
														"axis": "HORIZONTAL",
														"distribution": "FILL",
														"alignment": "FILL",
														"height": "100%",
														"width": "100%",
														"accessible": false,
														"hideFromAccessibility": true,
														"type": "STACK",
														"children": [{
															"height": "100%",
															"accessible": false,
															"hideFromAccessibility": true,
															"type": "CONTAINER",
															"child": {
																"onPress": {
																	"actionType": "CALLBACK",
																	"callback": {
																		"type": "EXPRESSION",
																		"expression": "() => {\n        if (GlobalState.debounceTimer) {\n          clearTimeout(GlobalState.debounceTimer);\n        }\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        \n        const isRecipeAlreadyInBasket = RecipeDetailsStepperState.recipeBasketState === 'ADDED';\n        const shouldRemoveRecipeFromBasket = ((true && RecipeDetailsPageState.servingsState - 1 < 1));\n        const oldServingSize = RecipeDetailsPageState.servingsState;\n        const newServingSize = false\n          ? RecipeDetailsPageState.servingsState >= 24 \n            ? 24 \n            : RecipeDetailsPageState.servingsState + 1\n          : RecipeDetailsPageState.servingsState <= 1 \n            ? 1 \n            : RecipeDetailsPageState.servingsState - 1;\n            \n        if (newServingSize !== oldServingSize) {\n          RecipeDetailsPageState.servingsState = newServingSize;\n        }\n            \n        GlobalState.debounceTimer = setTimeout(() => {\n          GlobalState.debounceTimer = 0;\n          RecipePortioningContentState.reloadOngoingState = true;\n          onPMLAction({\n            \"actionType\": \"RELOAD\",\n            \"suspenseId\": \"recipe-portioning-content-suspense-id-664375b30daa4456de253728\",\n            \"pageConfig\": {\n              \"id\": \"recipe-portioning-content\",\n              \"parameters\": { \"recipe_id\": '664375b30daa4456de253728', \"servings\": newServingSize }\n            },\n            \"onError\": {\n              \"actionType\": \"CALLBACK\",\n              \"callback\": () => {\n                RecipeDetailsPageState.servingsState = oldServingSize;\n                RecipePortioningContentState.reloadOngoingState = false;\n                onPMLAction({\n                  \"actionType\": \"EVENT\",\n                  \"action\": {\n                    \"type\": \"TOAST\",\n                    \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                  }\n                });\n              }\n            }\n          });\n  \n          if (isRecipeAlreadyInBasket) {\n            RecipeDetailsPageState.basketModificationOngoingState = true;\n            if (shouldRemoveRecipeFromBasket) { \n              onPMLAction({\n                \"actionType\": \"ENDPOINT\",\n                \"method\": \"post\",\n                \"url\": 'pages/task/remove-recipe-from-day',\n                \"body\": {\n                  \"payload\": {\n                    \"recipe_id\": '664375b30daa4456de253728',\n                    \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n                  }\n                },\n                \"onSuccess\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": (resp) => {\n                    \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: undefined,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n                    RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    RecipeDetailsStepperState.unavailableIngredientInBasketState = false;\n                    const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  group_type,\n  maturity_segment\n) => {\n  const contexts = [\n    {\n        schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n        data: {\n          recipe_id: recipeId,\n          day_relative_to_slot: Number(dayRelativeToSlot),\n          portions: portions\n        }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(group_type && maturity_segment) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/meals_customer_segment/jsonschema/1-0-0',\n      data: {\n        group_type: group_type,\n        maturity_segment: maturity_segment\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n  return contexts;\n}\n                    const analyticsContexts = getMealsUnavailabilityAnalytics(\n                      '664375b30daa4456de253728',\n                      undefined,\n                      undefined,\n                      RecipeDetailsStepperState.dayOffsetState,\n                      0,\n                      'RDP',\n                      'REMOVE'\n                    )\n                    onPMLAction(\n                      {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n                      analyticsContexts\n                    );\n                  }\n                },\n                \"onError\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": () => {\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    onPMLAction({\n                      \"actionType\": \"EVENT\",\n                      \"action\": {\n                        \"type\": \"TOAST\",\n                        \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                      }\n                    });\n                  }\n                }\n              })\n            } else {\n              onPMLAction({\n                \"actionType\": \"ENDPOINT\",\n                \"method\": \"post\",\n                \"url\": 'pages/task/update-number-of-portions-task',\n                \"body\": {\n                  \"payload\": {\n                    \"recipe_id\": '664375b30daa4456de253728',\n                    \"day_offset\": RecipeDetailsStepperState.dayOffsetState,\n                    \"portions\": newServingSize\n                  }\n                },\n                \"onSuccess\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": (resp) => {\n                    \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: undefined,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    RecipeDetailsStepperState.unavailableIngredientInBasketState  = resp.anyUnavailableIngredient;\n                    const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  group_type,\n  maturity_segment\n) => {\n  const contexts = [\n    {\n        schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n        data: {\n          recipe_id: recipeId,\n          day_relative_to_slot: Number(dayRelativeToSlot),\n          portions: portions\n        }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(group_type && maturity_segment) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/meals_customer_segment/jsonschema/1-0-0',\n      data: {\n        group_type: group_type,\n        maturity_segment: maturity_segment\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n  return contexts;\n}\n                    const analyticsContexts = getMealsUnavailabilityAnalytics(\n                      '664375b30daa4456de253728',\n                      resp.anyUnavailableIngredient,\n                      resp.unAvailableIngredients,\n                      RecipeDetailsStepperState.dayOffsetState,\n                      newServingSize,\n                      'RDP',\n                      'REMOVE'\n                    )\n                    onPMLAction(\n                      {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n                      analyticsContexts\n                    );\n                  }\n                },\n                \"onError\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": () => {\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    onPMLAction({\n                      \"actionType\": \"EVENT\",\n                      \"action\": {\n                        \"type\": \"TOAST\",\n                        \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                      }\n                    });\n                  }\n                }\n              });\n            }\n          }\n        }, 500);\n      }"
																	}
																},
																"disabled": {
																	"type": "EXPRESSION",
																	"expression": "((RecipeDetailsStepperState.recipeBasketState === 'ORDERED') || (RecipePortioningContentState.reloadOngoingState || RecipeDetailsPageState.basketModificationOngoingState))"
																},
																"type": "TOUCHABLE",
																"child": {
																	"height": "100%",
																	"width": "100%",
																	"type": "CONTAINER",
																	"child": {
																		"type": "CONTAINER",
																		"child": null
																	}
																}
															}
														}, {
															"height": "100%",
															"accessible": false,
															"hideFromAccessibility": true,
															"type": "CONTAINER",
															"child": {
																"onPress": {
																	"actionType": "CALLBACK",
																	"callback": {
																		"type": "EXPRESSION",
																		"expression": "() => {\n        if (GlobalState.debounceTimer) {\n          clearTimeout(GlobalState.debounceTimer);\n        }\n        onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n        \n        const isRecipeAlreadyInBasket = RecipeDetailsStepperState.recipeBasketState === 'ADDED';\n        const shouldRemoveRecipeFromBasket = ((false && RecipeDetailsPageState.servingsState - 1 < 1));\n        const oldServingSize = RecipeDetailsPageState.servingsState;\n        const newServingSize = true\n          ? RecipeDetailsPageState.servingsState >= 24 \n            ? 24 \n            : RecipeDetailsPageState.servingsState + 1\n          : RecipeDetailsPageState.servingsState <= 1 \n            ? 1 \n            : RecipeDetailsPageState.servingsState - 1;\n            \n        if (newServingSize !== oldServingSize) {\n          RecipeDetailsPageState.servingsState = newServingSize;\n        }\n            \n        GlobalState.debounceTimer = setTimeout(() => {\n          GlobalState.debounceTimer = 0;\n          RecipePortioningContentState.reloadOngoingState = true;\n          onPMLAction({\n            \"actionType\": \"RELOAD\",\n            \"suspenseId\": \"recipe-portioning-content-suspense-id-664375b30daa4456de253728\",\n            \"pageConfig\": {\n              \"id\": \"recipe-portioning-content\",\n              \"parameters\": { \"recipe_id\": '664375b30daa4456de253728', \"servings\": newServingSize }\n            },\n            \"onError\": {\n              \"actionType\": \"CALLBACK\",\n              \"callback\": () => {\n                RecipeDetailsPageState.servingsState = oldServingSize;\n                RecipePortioningContentState.reloadOngoingState = false;\n                onPMLAction({\n                  \"actionType\": \"EVENT\",\n                  \"action\": {\n                    \"type\": \"TOAST\",\n                    \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                  }\n                });\n              }\n            }\n          });\n  \n          if (isRecipeAlreadyInBasket) {\n            RecipeDetailsPageState.basketModificationOngoingState = true;\n            if (shouldRemoveRecipeFromBasket) { \n              onPMLAction({\n                \"actionType\": \"ENDPOINT\",\n                \"method\": \"post\",\n                \"url\": 'pages/task/remove-recipe-from-day',\n                \"body\": {\n                  \"payload\": {\n                    \"recipe_id\": '664375b30daa4456de253728',\n                    \"day_offset\": RecipeDetailsStepperState.dayOffsetState\n                  }\n                },\n                \"onSuccess\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": (resp) => {\n                    \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: undefined,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n                    RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE'\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    RecipeDetailsStepperState.unavailableIngredientInBasketState = false;\n                    const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  group_type,\n  maturity_segment\n) => {\n  const contexts = [\n    {\n        schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n        data: {\n          recipe_id: recipeId,\n          day_relative_to_slot: Number(dayRelativeToSlot),\n          portions: portions\n        }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(group_type && maturity_segment) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/meals_customer_segment/jsonschema/1-0-0',\n      data: {\n        group_type: group_type,\n        maturity_segment: maturity_segment\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n  return contexts;\n}\n                    const analyticsContexts = getMealsUnavailabilityAnalytics(\n                      '664375b30daa4456de253728',\n                      undefined,\n                      undefined,\n                      RecipeDetailsStepperState.dayOffsetState,\n                      0,\n                      'RDP',\n                      'ADD'\n                    )\n                    onPMLAction(\n                      {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n                      analyticsContexts\n                    );\n                  }\n                },\n                \"onError\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": () => {\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    onPMLAction({\n                      \"actionType\": \"EVENT\",\n                      \"action\": {\n                        \"type\": \"TOAST\",\n                        \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                      }\n                    });\n                  }\n                }\n              })\n            } else {\n              onPMLAction({\n                \"actionType\": \"ENDPOINT\",\n                \"method\": \"post\",\n                \"url\": 'pages/task/update-number-of-portions-task',\n                \"body\": {\n                  \"payload\": {\n                    \"recipe_id\": '664375b30daa4456de253728',\n                    \"day_offset\": RecipeDetailsStepperState.dayOffsetState,\n                    \"portions\": newServingSize\n                  }\n                },\n                \"onSuccess\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": (resp) => {\n                    \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: undefined,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    RecipeDetailsStepperState.unavailableIngredientInBasketState  = resp.anyUnavailableIngredient;\n                    const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  group_type,\n  maturity_segment\n) => {\n  const contexts = [\n    {\n        schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n        data: {\n          recipe_id: recipeId,\n          day_relative_to_slot: Number(dayRelativeToSlot),\n          portions: portions\n        }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(group_type && maturity_segment) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/meals_customer_segment/jsonschema/1-0-0',\n      data: {\n        group_type: group_type,\n        maturity_segment: maturity_segment\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n  return contexts;\n}\n                    const analyticsContexts = getMealsUnavailabilityAnalytics(\n                      '664375b30daa4456de253728',\n                      resp.anyUnavailableIngredient,\n                      resp.unAvailableIngredients,\n                      RecipeDetailsStepperState.dayOffsetState,\n                      newServingSize,\n                      'RDP',\n                      'ADD'\n                    )\n                    onPMLAction(\n                      {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n                      analyticsContexts\n                    );\n                  }\n                },\n                \"onError\": {\n                  \"actionType\": \"CALLBACK\",\n                  \"callback\": () => {\n                    RecipeDetailsPageState.basketModificationOngoingState = false;\n                    onPMLAction({\n                      \"actionType\": \"EVENT\",\n                      \"action\": {\n                        \"type\": \"TOAST\",\n                        \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                      }\n                    });\n                  }\n                }\n              });\n            }\n          }\n        }, 500);\n      }"
																	}
																},
																"disabled": {
																	"type": "EXPRESSION",
																	"expression": "(((RecipeDetailsStepperState.recipeBasketState === 'ORDERED') || (RecipePortioningContentState.reloadOngoingState || RecipeDetailsPageState.basketModificationOngoingState)) || (RecipeDetailsStepperState.unavailableIngredientInBasketState))"
																},
																"type": "TOUCHABLE",
																"child": {
																	"height": "100%",
																	"width": "100%",
																	"type": "CONTAINER",
																	"child": {
																		"type": "CONTAINER",
																		"child": null
																	}
																}
															}
														}]
													}
												}
											}, {
												"width": {
													"type": "EXPRESSION",
													"expression": "(CONTAINER_WIDTH / 2) - 8"
												},
												"axis": "VERTICAL",
												"alignment": "CENTER",
												"distribution": "CENTER",
												"accessible": false,
												"type": "STACK",
												"children": [{
													"onPress": {
														"actionType": "CALLBACK",
														"callback": {
															"type": "EXPRESSION",
															"expression": "() => {\n          const isRecipeAlreadyInBasket = RecipeDetailsStepperState.recipeBasketState === 'ADDED';\n          \n          if (isRecipeAlreadyInBasket) { \n            onPMLAction({\n              \"actionType\": 'OPEN',\n              \"target\": `app.picnic://store/page;id=meals-planner-day-bottom-sheet,presentation-mode=MODAL_OVER_CONTEXT,type=STATIC&recipeId=664375b30daa4456de253728&start_date=2025-01-11T01%3A00%3A00.000&origin=rdp&portions=${RecipeDetailsPageState.servingsState}&day_offset=${RecipeDetailsStepperState.dayOffsetState}`\n            }) \n          } else {\n            RecipeDetailsPageState.basketModificationOngoingState = true;\n              onPMLAction({\n            \"actionType\": \"HAPTIC_FEEDBACK\",\n            \"hapticActions\": [\n              {\n                \"method\": \"impactMedium\"\n              }\n            ]\n          });\n            onPMLAction({\n              \"actionType\": \"ENDPOINT\",\n              \"method\": \"post\",\n              \"url\": 'pages/task/assign-recipe-to-day',\n              \"body\": {\n                \"payload\": {\n                  \"recipe_id\": '664375b30daa4456de253728',\n                  \"portions\": RecipeDetailsPageState.servingsState,\n                  \"day_offset\": RecipeDetailsStepperState.dayOffsetState,\n                  \"core_ingredients\": RecipePortioningContentState.coreIngredientsState\n                }\n              },\n              \"onSuccess\": {\n                \"actionType\": \"CALLBACK\",\n                \"callback\": (resp) => {\n                  \n    if (resp && resp?.cart) {\n      onPMLAction({\n        operationId: undefined,\n        actionType: \"SET_CART\",\n        cart: resp.cart\n      })\n    } else {\n      onPMLAction({\n        actionType: \"EVENT\",\n        action: { \n          \"type\": \"REFRESH\",\n          \"source\": \"CART\",\n        }\n      })\n    }\n  \n                  RecipeDetailsStepperState.recipeBasketState = 'ADDED';\n                  RecipeDetailsStepperState.dayOffsetState = Number(resp.dayRelativeToSlot);\n                  RecipeDetailsPageState.basketModificationOngoingState = false;\n                  RecipeDetailsStepperState.unavailableIngredientInBasketState = resp.anyUnavailableIngredient;\n                  const getMealsUnavailabilityAnalytics = (\n  recipeId,\n  unavailability,\n  unavailableIngredient,\n  dayRelativeToSlot,\n  portions,\n  origin,\n  portions_action,\n  group_type,\n  maturity_segment\n) => {\n  const contexts = [\n    {\n        schema: 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0',\n        data: {\n          recipe_id: recipeId,\n          day_relative_to_slot: Number(dayRelativeToSlot),\n          portions: portions\n        }\n    },\n    {\n      schema: 'iglu:tech.picnic.snowplow.analytics/pml_component/jsonschema/1-1-0',\n      data: {\n        type: portions_action ? 'recipe-tile-portions-stepper' : 'recipe-tile-add-button',\n        template_id: origin\n      }\n    }\n  ];\n\n  if(group_type && maturity_segment) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/meals_customer_segment/jsonschema/1-0-0',\n      data: {\n        group_type: group_type,\n        maturity_segment: maturity_segment\n      }\n    });\n  }\n\n  if(portions_action !== undefined) {\n    contexts.find(context => context.schema === 'iglu:tech.picnic.snowplow.analytics/recipe/jsonschema/1-3-0').data.portions_action = portions_action;\n  }\n\n  if(unavailability) {\n    contexts.push({\n      schema: 'iglu:tech.picnic.snowplow.analytics/bulk_unavailability/jsonschema/1-0-0',\n      data: {\n        unavailable_products: unavailableIngredient\n      }\n    });\n  }\n  return contexts;\n}\n                  const analyticsContexts = getMealsUnavailabilityAnalytics(\n                    '664375b30daa4456de253728',\n                    resp.anyUnavailableIngredient,\n                    resp.unAvailableIngredients,\n                    RecipeDetailsStepperState.dayOffsetState,\n                    RecipeDetailsPageState.servingsState,\n                    'RDP'\n                  )\n                  onPMLAction(\n                    {\"actionType\": \"CALLBACK\",\"callback\": () => {return}},\n                    analyticsContexts\n                  );\n                }\n              },\n              \"onError\": {\n                \"actionType\": \"CALLBACK\",\n                \"callback\": () => {\n                  RecipeDetailsStepperState.recipeBasketState = 'AVAILABLE';\n                  RecipeDetailsPageState.basketModificationOngoingState = false;\n                  onPMLAction({\n                    \"actionType\": \"EVENT\",\n                    \"action\": {\n                      \"type\": \"TOAST\",\n                      \"message\": \"Sorry, etwas ist schiefgegangen. Bitte versuche es noch mal.\" \n                    }\n                  })\n                }\n              }\n            })\n          }\n        }"
														}
													},
													"disabled": {
														"type": "EXPRESSION",
														"expression": "((RecipeDetailsStepperState.recipeBasketState === 'ORDERED') || (RecipePortioningContentState.reloadOngoingState || RecipeDetailsPageState.basketModificationOngoingState))"
													},
													"type": "TOUCHABLE",
													"child": {
														"backgroundColor": {
															"type": "EXPRESSION",
															"expression": "((RecipeDetailsStepperState.recipeBasketState === 'ORDERED') || (RecipeDetailsStepperState.recipeBasketState === 'ADDED')) ? '#fcfaf9' : '#295813'"
														},
														"borderWidth": {
															"type": "EXPRESSION",
															"expression": "((RecipeDetailsStepperState.recipeBasketState === 'ORDERED') || (RecipeDetailsStepperState.recipeBasketState === 'ADDED')) ? 1 : 0"
														},
														"borderColor": {
															"type": "EXPRESSION",
															"expression": "((RecipeDetailsStepperState.recipeBasketState === 'ORDERED') || (RecipeDetailsStepperState.recipeBasketState === 'ADDED'))? 'rgba(0, 0, 0, 0.1)' : '#000000'"
														},
														"borderRadius": 8,
														"width": {
															"type": "EXPRESSION",
															"expression": "(CONTAINER_WIDTH / 2) - 16"
														},
														"height": "100%",
														"opacity": {
															"type": "EXPRESSION",
															"expression": "((RecipeDetailsStepperState.recipeBasketState === 'ORDERED') || (RecipePortioningContentState.reloadOngoingState || RecipeDetailsPageState.basketModificationOngoingState)) ? 0.5 : 1"
														},
														"type": "CONTAINER",
														"child": {
															"axis": "HORIZONTAL",
															"height": "100%",
															"type": "STACK",
															"children": [{
																"axis": "HORIZONTAL",
																"height": "100%",
																"width": "100%",
																"alignment": "CENTER",
																"alignContent": "CENTER",
																"distribution": "CENTER",
																"type": "STACK",
																"children": [{
																	"textAlignment": "CENTER",
																	"textAttributes": {
																		"size": 14,
																		"weight": "MEDIUM",
																		"color": {
																			"type": "EXPRESSION",
																			"expression": "((RecipeDetailsStepperState.recipeBasketState === 'ORDERED') || (RecipeDetailsStepperState.recipeBasketState === 'ADDED')) ? '#295813' : RecipeDetailsStepperState.recipeBasketState === 'AVAILABLE' ? '#ffffff' : '#333333'"
																		}
																	},
																	"markdown": {
																		"type": "EXPRESSION",
																		"expression": "((RecipeDetailsStepperState.recipeBasketState === 'ORDERED') || (RecipeDetailsStepperState.recipeBasketState === 'ADDED')) ? JSON.parse('{\"0\":\"Samstag\",\"1\":\"Sonntag\",\"2\":\"Montag\",\"3\":\"Dienstag\",\"4\":\"Mittwoch\",\"5\":\"Donnerstag\",\"6\":\"Freitag\"}')[RecipeDetailsStepperState.dayOffsetState % Object.keys(JSON.parse('{\"0\":\"Samstag\",\"1\":\"Sonntag\",\"2\":\"Montag\",\"3\":\"Dienstag\",\"4\":\"Mittwoch\",\"5\":\"Donnerstag\",\"6\":\"Freitag\"}')).length] : RecipeDetailsStepperState.recipeBasketState === 'AVAILABLE' ? 'Hinzufügen' : 'Zurzeit nicht lieferbar'"
																	},
																	"type": "RICH_TEXT"
																}]
															}]
														}
													}
												}]
											}]
										}
									}]
								}
							}
						}
					},
					"type": "SUSPENSE",
					"pageConfig": {
						"id": "recipe-details-stepper",
						"parameters": {
							"recipe_id": "664375b30daa4456de253728",
							"is_portioning_enabled": true,
							"day_offset": null,
							"is_ordered": false
						}
					},
					"loadingConfig": null,
					"errorConfig": null
				}]
			}
		}
	}
}